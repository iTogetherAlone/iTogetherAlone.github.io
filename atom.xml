<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TogetherAlone</title>
  
  <subtitle>陌尘</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://itogetheralone.github.io/"/>
  <updated>2020-11-12T06:01:05.693Z</updated>
  <id>https://itogetheralone.github.io/</id>
  
  <author>
    <name>TogetherAlone</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>WEB渗透测试的信息收集</title>
    <link href="https://itogetheralone.github.io/2020/11/08/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <id>https://itogetheralone.github.io/2020/11/08/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</id>
    <published>2020-11-08T13:35:00.000Z</published>
    <updated>2020-11-12T06:01:05.693Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-rKfibYcj" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="4941417121" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>转载 侵删<br>原文链接：<a href="https://www.freebuf.com/articles/web/251083.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/251083.html</a><br>Web渗透测试：信息收集篇</p><h2 id="信息收集介绍"><a href="#信息收集介绍" class="headerlink" title="信息收集介绍"></a>信息收集介绍</h2><p>进行web渗透测试之前，最重要的一步那就是就是信息收集了，俗话说“渗透的本质也就是信息收集”，信息收集的深度，直接关系到渗透测试的成败。打好信息收集这一基础可以让测试者选择合适和准确的渗透测试攻击方式，缩短渗透测试的时间。一般来说收集的信息越多越好，通常包括以下几个部分：</p><blockquote><p>域名信息收集</p><p>子域名信息收集</p><p>站点信息收集</p><p>敏感信息收集</p><p>服务器信息收集</p><p>端口信息收集</p><p>真实IP地址识别</p><p>社会工程学</p></blockquote><p>下面我们对这几种信息收集分别做相应的讲解。</p><h2 id="域名信息收集"><a href="#域名信息收集" class="headerlink" title="域名信息收集"></a>域名信息收集</h2><p><strong>域名</strong>（英语：Domain Name），又称网域，是由一串用点分隔的名字组成的Internet上某一台计算机或计算机组的名称，用于在数据传输时对计算机的定位标识（有时也指地理位置）。由于IP地址具有不方便记忆并且不能显示地址组织的名称和性质等缺点，人们设计出了域名，并通过网域名称系统来将域名和IP地址相互映射，使人更方便地访问互联网，而不用去记住能够被机器直接读取的IP地址数串。</p><blockquote><p><strong>顶级域名/一级域名：</strong></p><p>顶级域（或顶级域名，也称为一级域名），是互联网DNS等级之中的最高级的域，它保存于DNS根域的名字空间中。顶级域名是域名的最后一个部分，即是域名最后一点之后的字母，例如在<a href="http://www.example.com这个域名中，**顶级域是****.com**。" target="_blank" rel="noopener">http://www.example.com这个域名中，**顶级域是****.com**。</a></p><p><strong>二级域名：</strong></p><p>除了顶级域名，还有二级域名，就是最靠近顶级域名左侧的字段。例如在<a href="http://www.example.com这个域名中，example就是二级域名。" target="_blank" rel="noopener">http://www.example.com这个域名中，example就是二级域名。</a></p><p><strong>子域名：</strong></p><p>子域名（或子域；英语：Subdomain）是在域名系统等级中，属于更高一层域的域。比如，mail.example.com和calendar.example.com是example.com的两个子域，而example.com则是顶级域.com的子域。凡顶级域名前加前缀的都是该顶级域名的子域名，而子域名根据技术的多少分为二级子域名，三级子域名以及多级子域名。</p></blockquote><p>一般来说，在做渗透测试之前，渗透测试人员能够了解到的信息有限，一般也就只知道一个域名，这就需要渗透测试人员首先要针对一个仅有的域名进行信息搜集，获取域名的注册信息，包括该域名的DNS服务器信息、子域信息和注册人的联系信息等信息。可以用以下几种方法来收集域名信息。</p><h3 id="Whois-查询"><a href="#Whois-查询" class="headerlink" title="Whois 查询"></a>Whois 查询</h3><p>whois 是用来查询域名的IP以及所有者等信息的传输协议。简单说，whois就是一个用来查询域名是否已经被注册，以及注册域名的详细信息的数据库（如域名所有人、域名注册商），不同域名后缀的Whois信息需要到不同的Whois数据库查询。通过whois来实现对域名信息的查询，可以得到注册人的姓名和邮箱信息通常对测试个人站点非常有用，因为我们可以通过搜索引擎和社交网络挖掘出域名所有人的很多信息。</p><p><strong>（1）在线查询</strong></p><p>如今网上出现了一些网页接口简化的线上查询工具，可以一次向不同的数据库查询。网页接口的查询工具仍然依赖whois协议向服务器发送查询请求，命令列接口的工具仍然被系统管理员广泛使用。whois通常使用TCP协议43端口。每个域名/IP的whois信息由对应的管理机构保存。</p><p>常见的网站包括：</p><blockquote><p>Whois站长之家查询：<a href="http://whois.chinaz.com/" target="_blank" rel="noopener">http://whois.chinaz.com/</a></p><p>阿里云中国万网查询：<a href="https://whois.aliyun.com/" target="_blank" rel="noopener">https://whois.aliyun.com/</a></p><p>Whois Lookup 查找目标网站所有者的信息：<a href="http://whois.domaintools.com/" target="_blank" rel="noopener">http://whois.domaintools.com/</a></p><p>Netcraft Site Report 显示目标网站上使用的技术：<a href="http://toolbar.netcraft.com/site_report?url=" target="_blank" rel="noopener">http://toolbar.netcraft.com/site_report?url=</a></p><p>Robtex DNS 查询显示关于目标网站的全面的DNS信息：<a href="https://www.robtex.com/" target="_blank" rel="noopener">https://www.robtex.com/</a></p><p>全球Whois查询：<a href="https://www.whois365.com/cn/" target="_blank" rel="noopener">https://www.whois365.com/cn/</a></p><p>站长工具爱站查询：<a href="https://whois.aizhan.com/" target="_blank" rel="noopener">https://whois.aizhan.com/</a></p></blockquote><p><strong>示例：</strong><br>下面是使用站长之家Whois查询freebuf域名的相关信息：</p><p><img src="https://image.3001.net/images/20200927/1601202210_5f706822c25936c650120.png!small" alt="1601202210_5f706822c25936c650120.png!small"></p><p><strong>（2）使用kali中的whois工具查询</strong></p><p>在Kali Linux下自带的Whois查询工具，通过命令Whois查询域名信息，只需输入要查询的域名即可，如下图所示。</p><p><img src="https://image.3001.net/images/20200927/1601202371_5f7068c350a296c9d9e56.png!small" alt="1601202371_5f7068c350a296c9d9e56.png!small"></p><h3 id="备案信息查询"><a href="#备案信息查询" class="headerlink" title="备案信息查询"></a>备案信息查询</h3><p>网站备案信息是根据国家法律法规规定，由网站所有者向国家有关部门申请的备案，是国家信息产业部对网站的一种管理途径，是为了防止在网上从事非法网站经营活动，当然主要是针对国内网站。</p><p>在备案查询中我们主要关注的是：单位信息例如名称、备案编号、网站负责人、法人、电子邮箱、联系电话等。</p><p>常用的备案信息查询网站有以下几个：</p><blockquote><p>ICP/IP地址/域名信息备案管理系统：<a href="http://beian.miit.gov.cn/publish/query/indexFirst.action" target="_blank" rel="noopener">http://beian.miit.gov.cn/publish/query/indexFirst.action</a></p><p>ICP备案查询网：<a href="http://www.beianbeian.com/" target="_blank" rel="noopener">http://www.beianbeian.com/</a></p><p>备案吧吧：<a href="https://www.beian88.com/" target="_blank" rel="noopener">https://www.beian88.com/</a></p><p>天眼查：<a href="https://www.tianyancha.com/" target="_blank" rel="noopener">https://www.tianyancha.com/</a></p></blockquote><p><img src="https://image.3001.net/images/20200927/1601202703_5f706a0fc1ca842608de6.png!small" alt="1601202703_5f706a0fc1ca842608de6.png!small"></p><h2 id="子域名信息收集"><a href="#子域名信息收集" class="headerlink" title="子域名信息收集"></a>子域名信息收集</h2><p>子域名（或子域；英语：Subdomain）是在域名系统等级中，属于更高一层域的域。比如，mail.example.com和calendar.example.com是example.com的两个子域，而example.com则是顶级域.com的子域。凡顶级域名前加前缀的都是该顶级域名的子域名，而子域名根据技术的多少分为二级子域名，三级子域名以及多级子域名。</p><p><strong>为什么要收集子域名</strong></p><p>子域名枚举可以在测试范围内发现更多的域或子域，这将增大漏洞发现的几率。</p><p>有些隐藏的、被忽略的子域上运行的应用程序可能帮助我们发现重大漏洞。</p><p>在同一个组织的不同域或应用程序中往往存在相同的漏洞</p><blockquote><p>假设我们的目标网络规模比较大，直接从主域入手显然是很不理智的，因为对于这种规模的目标，一般其主域都是重点防护区域，所以不如先进入目标的某个子域，然后再想办法迂回接近真正的目标，这无疑是个比较好的选择。</p></blockquote><p>收集子域名的方法有以下几种：</p><h3 id="利用搜索引擎查询"><a href="#利用搜索引擎查询" class="headerlink" title="利用搜索引擎查询"></a>利用搜索引擎查询</h3><p>我们可以利用Google语法搜索子域名，我们以百度的域名为例，使用“site:baidu.com”语法，如下图所示。</p><p><img src="https://image.3001.net/images/20200927/1601203399_5f706cc739a4b37be16a0.png!small" alt="1601203399_5f706cc739a4b37be16a0.png!small"></p><h3 id="利用在线工具查询"><a href="#利用在线工具查询" class="headerlink" title="利用在线工具查询"></a>利用在线工具查询</h3><p>网上有很多子域名的查询站点，可通过它们检索某个给定域名的子域名。如：</p><ul><li>DNSdumpster：<a href="https://dnsdumpster.com/" target="_blank" rel="noopener">https://dnsdumpster.com/</a></li><li>whois反查：<a href="http://whois.chinaz.com/" target="_blank" rel="noopener">http://whois.chinaz.com/</a></li><li>virustotal：<a href="http://www.virustotal.com/" target="_blank" rel="noopener">www.virustotal.com</a></li><li>子域名爆破：<a href="https://phpinfo.me/domain" target="_blank" rel="noopener">https://phpinfo.me/domain/</a></li><li>IP反查绑定域名：<a href="http://dns.aizhan.com/" target="_blank" rel="noopener">http://dns.aizhan.com/</a></li><li><a href="https://hackertarget.com/find-dns-host-records/" target="_blank" rel="noopener">https://hackertarget.com/find-dns-host-records/</a></li><li><a href="https://site.ip138.com/" target="_blank" rel="noopener">https://site.ip138.com</a></li></ul><p>我们用DNSdumpster查询nasa的子域名：</p><p><img src="https://image.3001.net/images/20200927/1601204368_5f7070908b96566f434cc.png!small" alt="1601204368_5f7070908b96566f434cc.png!small"></p><p><img src="https://image.3001.net/images/20200927/1601204623_5f70718f016e07acc9eb6.png!small" alt="1601204623_5f70718f016e07acc9eb6.png!small"></p><h3 id="通过证书透明度公开日志枚举子域名"><a href="#通过证书透明度公开日志枚举子域名" class="headerlink" title="通过证书透明度公开日志枚举子域名"></a>通过证书透明度公开日志枚举子域名</h3><blockquote><p>证书透明度是证书授权机构的一个项目，证书授权机构会将每个SSL/TLS证书发布到公共日志中。一个SSL/TLS证书通常包含域名、子域名和邮件地址，这些也经常成为攻击者非常希望获得的有用信息。</p></blockquote><p>查找某个域名所属证书的最简单的方法就是使用搜索引擎来搜索一些公开的CT日志，例如以下网站：</p><ul><li>crt.sh：<a href="https://crt.sh/" target="_blank" rel="noopener">https://crt.sh</a></li><li>censys：<a href="https://censys.io/" target="_blank" rel="noopener">https://censys.io</a></li></ul><h3 id="利用工具枚举子域名"><a href="#利用工具枚举子域名" class="headerlink" title="利用工具枚举子域名"></a>利用工具枚举子域名</h3><p><strong>kali上的工具</strong></p><p><img src="https://image.3001.net/images/20200927/1601205169_5f7073b13f48de2b9862a.png!small" alt="1601205169_5f7073b13f48de2b9862a.png!small"></p><p>在kali中的信息收集模块的DNS分析中，有很多工具可以进行域名信息收集，如上图。</p><ul><li><h4 id="Dnsenum：域名信息收集"><a href="#Dnsenum：域名信息收集" class="headerlink" title="Dnsenum：域名信息收集"></a>Dnsenum：域名信息收集</h4></li><li><h4 id="Dnsmap：收集信息和枚举DNS信息"><a href="#Dnsmap：收集信息和枚举DNS信息" class="headerlink" title="Dnsmap：收集信息和枚举DNS信息"></a>Dnsmap：收集信息和枚举DNS信息</h4></li><li><h4 id="Dnsrecon：用于DNS侦察"><a href="#Dnsrecon：用于DNS侦察" class="headerlink" title="Dnsrecon：用于DNS侦察"></a>Dnsrecon：用于DNS侦察</h4></li><li><h4 id="Fierce-：子域名查询"><a href="#Fierce-：子域名查询" class="headerlink" title="Fierce ：子域名查询"></a><strong>Fierce ：子域名查询</strong></h4></li><li><h4 id="whois查询"><a href="#whois查询" class="headerlink" title="whois查询"></a>whois查询</h4></li></ul><p>我们可以利用Fierce工具，进行子域名枚举。该工具首先测试是否有域传送漏洞，若存在则应该直接通过域传送搜集子域信息，没有域传送漏洞则采用爆破的方式。</p><p>使用方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fierce -dns &lt;域名&gt; </span><br><span class="line">fierce -dns &lt;域名&gt; -threads 100      &#x2F;&#x2F; threads 是线程数，可以自己指定</span><br></pre></td></tr></table></figure><p><img src="https://image.3001.net/images/20200927/1601205913_5f7076991e2916242ff32.png!small" alt="1601205913_5f7076991e2916242ff32.png!small"></p><p><strong>Windows上的工具</strong></p><p>Windows上的子域名查询工具主要由：</p><ul><li><p>Layer子域名挖掘机</p></li><li><h4 id="subDomainsbrute"><a href="#subDomainsbrute" class="headerlink" title="subDomainsbrute"></a>subDomainsbrute</h4></li><li><p>K8</p></li><li><p>Sublist3r</p></li><li><p>Maltego</p></li><li><p>……</p></li></ul><p>subDomainsbrute工具可以用于二级域名收集，下载地址：<a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="noopener">https://github.com/lijiejie/subDomainsBrute</a></p><p>Python3环境下运行需要安装aiodns库。使用该工具的命令执行如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python subDomainsBrute.py xxxx.com</span><br></pre></td></tr></table></figure><p><img src="https://image.3001.net/images/20200927/1601206570_5f70792a5bee15c90644a.png!small" alt="1601206570_5f70792a5bee15c90644a.png!small"></p><p>收集完后，会将收集结果写入一个域名对应的文件中：</p><p><img src="https://image.3001.net/images/20200927/1601206623_5f70795fd563855ff5c4d.png!small" alt="1601206623_5f70795fd563855ff5c4d.png!small"></p><p>更多使用技巧：<a href="https://www.geek-share.com/detail/2769110300.html" target="_blank" rel="noopener">https://www.geek-share.com/detail/2769110300.html</a></p><p>除了subDomainsbrute工具，Layer子域名挖掘机也是十分强大的，用它收集子域名将详细的显示域名、解析IP、CDN列表、Web服务器和网站状态等信息：</p><p><img src="https://image.3001.net/images/20200927/1601206857_5f707a49bf77e2b4503fa.png!small" alt="1601206857_5f707a49bf77e2b4503fa.png!small"></p><p>该工具请自行上网搜索下载。</p><h2 id="站点信息收集"><a href="#站点信息收集" class="headerlink" title="站点信息收集"></a>站点信息收集</h2><p>接下来我们进行web网站站点信息收集，主要收集如下信息：</p><ul><li>CMS指纹识别</li><li>历史漏洞</li><li>脚本语言</li><li>敏感目录/文件</li><li>Waf识别</li><li>……</li></ul><h3 id="CMS指纹识别"><a href="#CMS指纹识别" class="headerlink" title="CMS指纹识别"></a>CMS指纹识别</h3><p>CMS（内容管理系统）又称为整站系统或文章系统，用于网站内容管理。用户只需要下载对应的CMS软件包，就能部署搭建，并直接利用CMS。但是各种CMS都具有其独特的结构命名规则和特定的文件内容，因此可以利用这些内容来获取CMS站点的具体软件CMS与版本。</p><p>在渗透测试中，对进行指纹识别是相当有必要的，识别出相应的CMS，才能查找与其相关的漏洞，然后才能进行相应的渗透操作。</p><p>常见的CMS有Dedecms(织梦)、Discuz、PHPWEB、PHPWind、PHPCMS、ECShop、Dvbbs、SiteWeaver、ASPCMS、帝国、Z-Blog、WordPress等。</p><p><strong>（1）在线识别</strong></p><p>如今，网上一些在线的网站查询CMS指纹识别，如下所示：</p><ul><li>BugScaner: <a href="http://whatweb.bugscaner.com/look/" target="_blank" rel="noopener">http://whatweb.bugscaner.com/look/</a></li><li>潮汐指纹：<a href="http://finger.tidesec.net/" target="_blank" rel="noopener">http://finger.tidesec.net/</a></li><li>云悉：<a href="http://www.yunsee.cn/info.html" target="_blank" rel="noopener">http://www.yunsee.cn/info.html</a></li><li>WhatWeb: <a href="https://whatweb.net/" target="_blank" rel="noopener">https://whatweb.net/</a></li><li>云悉指纹: <a href="http://www.yunsee.cn/finger.html" target="_blank" rel="noopener">http://www.yunsee.cn/finger.html</a></li></ul><p>如下，我们用WhatWeb: <a href="https://whatweb.net/在线识别一下我的博客：" target="_blank" rel="noopener">https://whatweb.net/在线识别一下我的博客：</a></p><p><strong>（2）利用工具</strong></p><p>常见的CMS指纹识别工具有WhatWeb、WebRobo、椰树、御剑Web指纹识别。大禹CMS识别程序等，可以快速识别一些主流CMS。</p><p>如下，我们利用kali上的WhatWeb工具识别目标站点的cms：</p><p><img src="https://image.3001.net/images/20200927/1601208002_5f707ec247a1b646c0620.png!small" alt="img"></p><p>如上图，WhatWeb将目标站点的服务器、中间节、cms等都识别了出来。</p><p>当我们得知了一个站点的cms类型后，我们可以在网上查找与其相关的漏洞并进行相应的测试。</p><p><strong>（3）手工识别</strong></p><ul><li>\1. 根据HTTP响应头判断，重点关注X-Powered-By、cookie等字段</li><li>\2. 根据HTML 特征，重点关注 body、title、meta等标签的内容和属性。</li><li>\3. 根据特殊的class判断。HTML 中存在特定 class 属性的某些 div 标签，如<body class="ke-content"></li><li>……</li></ul><h3 id="敏感目录-文件收集"><a href="#敏感目录-文件收集" class="headerlink" title="敏感目录/文件收集"></a>敏感目录/文件收集</h3><p>也就是对目标网站做个目录扫描。在web渗透中，探测Web目录结构和隐藏的敏感文件是一个十分重要的环节，从中可以获取网站的后台管理页面、文件上传界面、robots.txt，甚至可能扫描出备份文件从而得到网站的源代码。</p><p>常见的网站目录的扫描工具主要有：</p><ul><li>御剑后台扫描工具</li><li>dirbuster扫描工具</li><li>dirsearch扫描工具</li><li>dirb</li><li>wwwscan</li><li>Spinder.py</li><li>Sensitivefilescan</li><li>Weakfilescan</li><li>……</li></ul><p><strong>（1）dirsearch目录扫描</strong></p><p>下载地址：<a href="https://github.com/maurosoria/dirsearch" target="_blank" rel="noopener">https://github.com/maurosoria/dirsearch</a></p><p>该工具使用很简单，简单使用如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 dirsearch.py -u &lt;URL&gt; -e &lt;EXTENSION&gt;</span><br></pre></td></tr></table></figure><ul><li>-u：url（必须）</li><li>-e：扫描网站需要指定网站的脚本类型，* 为全部类型的脚本（必须）</li><li>-w：字典（可选）</li><li>-t：线程（可选）</li></ul><p><img src="https://image.3001.net/images/20200927/1601208904_5f708248b14d2bc2e68b2.png!small" alt="1601208904_5f708248b14d2bc2e68b2.png!small"></p><p><strong>（2）DirBuster目录扫描</strong></p><p>DirBuster是Owasp(开放Web软体安全项目- Open Web Application Security Project )开发的一款专门用于探测Web服务器的目录和隐藏文件。（需要java环境）</p><p>使用如下：</p><p><img src="https://image.3001.net/images/20200927/1601209106_5f708312c996089e6f9ba.png!small" alt="img"></p><ol><li>首先在Target URL输入框中输入要扫描的网址并将扫描过程中的请求方法设置为“Auto Switch(HEAD and GET)”。</li><li>自行设置线程（太大了容易造成系统死机哦）</li><li>选择扫描类型，如果使用个人字典扫描，则选择“List based bruteforce”选项。</li><li>单击“Browse”加载字典。</li><li>单机“URL Fuzz”，选择URL模糊测试（不选择该选项则使用标准模式）</li><li>在URL to fuzz里输入“/{dir}”。这里的{dir}是一个变量，用来代表字典中的每一行，运行时{dir}会被字典中的目录替换掉。</li><li>点击“start”开始扫描</li></ol><p>使用DirBuster扫描完成之后，查看扫描结果，这里的显示方式可以选择树状显示，也可以直接列出所有存在的页面：</p><p><img src="https://image.3001.net/images/20200927/1601210235_5f70877b0275cf478e7e6.png!small" alt="1601210235_5f70877b0275cf478e7e6.png!small"></p><h3 id="Waf识别"><a href="#Waf识别" class="headerlink" title="Waf识别"></a>Waf识别</h3><p>Web应用防护系统（也称为：网站应用级入侵防御系统。英文：Web Application Firewall，简称： WAF）。利用国际上公认的一种说法：Web应用防火墙是通过执行一系列针对HTTP/HTTPS的安全策略来专门为Web应用提供保护的一款产品。</p><p>wafw00f是一个Web应用防火墙（WAF）指纹识别的工具。</p><p>下载地址：<a href="https://github.com/EnableSecurity/wafw00f" target="_blank" rel="noopener">https://github.com/EnableSecurity/wafw00f</a></p><p>wafw00f的工作原理：</p><blockquote><p>\1. 发送正常的HTTP请求，然后分析响应，这可以识别出很多WAF。</p><p>\2. 如果不成功，它会发送一些（可能是恶意的）HTTP请求，使用简单的逻辑推断是哪一个WAF。</p><p>\3. 如果这也不成功，它会分析之前返回的响应，使用其它简单的算法猜测是否有某个WAF或者安全解决方案响应了我们的攻击。</p></blockquote><p>kali上内置了该工具：</p><p><img src="https://image.3001.net/images/20200927/1601210847_5f7089df9f44efe4b8620.png!small" alt="1601210847_5f7089df9f44efe4b8620.png!small"></p><p>wafw00f支持非常多的WAF识别。要查看它能够检测到哪些WAF，请使用-l 选项：</p><p><img src="https://image.3001.net/images/20200927/1601211036_5f708a9cbf695b0daccca.png!small" alt="1601211036_5f708a9cbf695b0daccca.png!small"></p><p>……</p><p>简单使用如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wafw00f https:&#x2F;&#x2F;www.xxx.com&#x2F;</span><br></pre></td></tr></table></figure><p><img src="https://image.3001.net/images/20200927/1601211307_5f708babcd34157f0169e.png!small" alt="1601211307_5f708babcd34157f0169e.png!small"></p><h2 id="敏感信息收集"><a href="#敏感信息收集" class="headerlink" title="敏感信息收集"></a>敏感信息收集</h2><p>有时候，针对某些安全做得很好的目标，直接通过技术层面是无法完成渗透测试的。此时，便可以利用搜索引擎搜索目标暴露在互联网上的关联信息。例如：数据库文件、SQL注入、服务配置信息，甚至是通过Git找到站点泄露源代码，以及Redis等未授权访问、Robots.txt等敏感信息，从而达到渗透目的。</p><h3 id="Google-hacking"><a href="#Google-hacking" class="headerlink" title="Google hacking"></a>Google hacking</h3><p><img src="https://image.3001.net/images/20200928/1601258249_5f71430982bbaf955afac.jpeg!small" alt="img"></p><p>Google搜索引擎从1998年开始沿用至今，我们所有的问题，在Google上面几乎都能找到答案。Google可以用来发现远远超过我们甚至应该能找到的信息，Google可以找到敏感文件，网络漏洞，它允许操作系统和识别，甚至可以被用来找到密码，数据库乃至整个邮箱内容……</p><p>Google Hacking 正是是利用谷歌搜索的强大，来在浩瀚的互联网中搜索到超乎我们想象我的信息。轻量级的搜索可以搜索出一些遗留后门，不想被发现的后台入口、sql注入等网络漏洞，中量级的搜索出一些用户信息泄露，源代码泄露，未授权访问等等，重量级的则可能是mdb文件下载，CMS 未被锁定install页面，网站配置密码，php远程文件包含漏洞等重要信息。</p><p>利用 Google Hacking 我们能够收集很多对我们有用的情报，毫无疑问Google是一个伟大的信息收集工具。</p><p>要利用Google搜索我们想要的信息，需要配合谷歌搜索引擎的一些语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">intext：寻找正文中含有关键字的网页</span><br><span class="line">intitle：寻找标题中含有关键字的网页</span><br><span class="line">allintitle：用法和intitle类似，只不过可以指定多个词</span><br><span class="line">inurl：搜索url中含有关键词的网页</span><br><span class="line">allinurl：用法和inurl类似，只不过可以指定多个词</span><br><span class="line">site：指定访问的站点</span><br><span class="line">filetype：指定访问的文件类型</span><br><span class="line">link：指定链接的网页</span><br><span class="line">related：搜索相似类型的网页</span><br><span class="line">info：返回站点的指定信息，例如：info:www.baidu.com   将返回百度的一些信息</span><br><span class="line">phonebook：电话簿查询美国街道地址和电话号码信息</span><br><span class="line">Index of：利用 Index of 语法可以发现允许目录浏览的web网站，就像在本地的普通目录一样</span><br></pre></td></tr></table></figure><p><strong>查找网站后台</strong></p><ul><li>intext:后台登录：将只返回正文中包含“后台登录”的网页</li><li>intitle:后台登录：将只返回标题中包含“后台登录”的网页</li></ul><p><img src="https://image.3001.net/images/20200927/1601212355_5f708fc33e7058638d1ba.png!small" alt="img"><strong>查找管理员登录页面</strong></p><p><img src="https://image.3001.net/images/20200927/1601212453_5f709025dfd5fb107e82d.png!small" alt="img"><strong>查找后台数据库管理页面</strong></p><p><img src="https://image.3001.net/images/20200927/1601212479_5f70903fc707a913cf6a3.png!small" alt="img"></p><p><strong>查找指定网站后台</strong></p><ul><li>site:xx.com intext:管理</li><li>site:xx.com inurl:login</li><li>site:xx.com intitle:后台</li></ul><p><strong>查看指定网站的文件上传漏洞</strong></p><ul><li>site:xx.com inurl:file</li><li>site:xx.com inurl:load</li></ul><p><strong>利用Index of可以发现允许目录浏览的web网站，就像在本地的普通目录一样</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">index of &#x2F;admin</span><br><span class="line">index of &#x2F;passwd</span><br><span class="line">index of &#x2F;password</span><br><span class="line">index of &#x2F;mail</span><br><span class="line">&quot;index of &#x2F;&quot; +passwd</span><br><span class="line">&quot;index of &#x2F;&quot; +password.txt</span><br><span class="line">&quot;index of &#x2F;config&quot;</span><br></pre></td></tr></table></figure><p>用index of目录列表列出存在于一个web服务器上的文件和目录。</p><p>intitle:index.of 这里的休止符代表的是单个字母的通配符</p><p><img src="https://image.3001.net/images/20200927/1601212635_5f7090db8638a07b4c79b.png!small" alt="img">随便进去一个看看：</p><p><img src="https://image.3001.net/images/20200927/1601212669_5f7090fd8f99e87c1ff25.png!small" alt="img"><strong>备份文件泄露</strong></p><ul><li>intitle:index.of index.php.bak</li><li>inurl:index.php.bak</li><li>intitle:index.of <a href="http://www.zip/" target="_blank" rel="noopener">www.zip</a></li></ul><p><strong>查找sql注入</strong></p><ul><li>inurl:?id=1</li><li>inurl: php?id=</li></ul><p><strong>GHDB 谷歌黑客数据库</strong></p><p>链接：<a href="https://www.exploit-db.com/google-hacking-database/" target="_blank" rel="noopener">https://www.exploit-db.com/google-hacking-database/</a></p><p>黑客们能通过简单的搜索框在网络中出入于无形，在这背后还有一个强大的后盾，那就是Google Hacking Database（GHDB）</p><p><img src="https://image.3001.net/images/20200927/1601212900_5f7091e451fbf23636f2e.png!small" alt="img">这是全世界的黑客朋友们自发维护的一个汇集着各种已经被优化的查询语句的数据库，每天都在不断地更新各种好用有效的Google查询语句。</p><h3 id="Github信息泄露"><a href="#Github信息泄露" class="headerlink" title="Github信息泄露"></a>Github信息泄露</h3><p><img src="https://image.3001.net/images/20200928/1601258335_5f71435f316ab5a62c945.gif!small" alt="img"></p><p>GitHub作为开源代码平台，给程序员提供了很多便利，但如果使用不当，比如将包含了账号密码、密钥等配置文件的代码上传了，导致攻击者能发现并进一步利用这些泄露的信息，就是一个典型的GitHub敏感信息泄露漏洞，再如开发人员在开发时，常常会先把源码提交到github，最后再从远程托管网站把源码pull到服务器的web目录下，如果忘记把.git文件删除，就造成此漏洞。利用.git文件恢复网站的源码，而源码里可能会有数据库的信息，详情参见：<a href="https://blog.csdn.net/qq_45521281/article/details/105767428" target="_blank" rel="noopener">https://blog.csdn.net/qq_45521281/article/details/105767428</a></p><p>很多网站及系统都会使用pop3和smtp发送来邮件，不少开发者由于安全意识不足会把相关的配置文件信息也放到Github上，所以如果这时候我们动用一下Google搜索语法，就能把这些敏感信息给找出来了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">site:Github.com smtp</span><br><span class="line">site:Github.com smtp @qq.com</span><br><span class="line">site:Github.com smtp @126.com</span><br><span class="line">site:Github.com smtp @163.com</span><br><span class="line">site:Github.com smtp @sina.com.cn</span><br><span class="line">……</span><br></pre></td></tr></table></figure><p><img src="https://image.3001.net/images/20200928/1601256346_5f713b9a2ce1377110e0b.png!small" alt="1601256346_5f713b9a2ce1377110e0b.png!small"></p><p><img src="https://image.3001.net/images/20200928/1601256490_5f713c2a823b6be768d59.png!small" alt="1601256490_5f713c2a823b6be768d59.png!small"></p><p>数据库信息泄露：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">site:Github.com sa password</span><br><span class="line">site:Github.com root password</span><br></pre></td></tr></table></figure><h2 id="服务器信息收集"><a href="#服务器信息收集" class="headerlink" title="服务器信息收集"></a>服务器信息收集</h2><p>我们还需要对目标服务器的信息进行收集，主要包括一下部分：</p><ul><li>Web服务器指纹识别</li><li>真实IP地址识别</li><li>编程语言</li><li>Web中间件</li><li>端口信息收集</li><li>后端存储技术识别</li><li>……</li></ul><h3 id="Web服务器指纹识别"><a href="#Web服务器指纹识别" class="headerlink" title="Web服务器指纹识别"></a>Web服务器指纹识别</h3><p>Web服务器指纹识别是了解正在运行的web服务器类型和版本，目前市场上存在几种不同的web服务器提供商和软件版本，了解被测试的web服务器的类型，能让测试者更好去测试已知漏洞和大概的利用方法，将会在渗透测试过程中有很大的帮助，甚至会改变测试的路线。</p><p>Web服务器指纹识别主要识别一下信息：</p><blockquote><p>1、Web服务器名称，版本</p><p>2、Web服务器后端是否有应用服务器</p><p>3、数据库(DBMS)是否部署在同一主机(host)，数据库类型</p><p>4、Web应用使用的编程语言</p><p>5、Web应用框架</p><p>……</p></blockquote><p><strong>（1）手工检测</strong></p><ul><li><strong>1. HTTP头分析</strong></li></ul><p>即查看HTTP响应头中的Server、X-Powered-By、Cookie 等字段，这也是最基本的方法。</p><p><img src="https://image.3001.net/images/20200927/1601214426_5f7097da7934a6f01a9b2.png!small" alt="img">如上图，从Server字段，我们可以发现服务器可能是Apache，版本2.4.6，运行在CentOS Linux系统上。</p><p>根据X-Powered-By字段我们可以判断识别出web框架，并且不同的web框架有其特有的cookie，根据这个我们也能判断识别出web应用框架。</p><ul><li><strong>2. 协议行为</strong></li></ul><p>即从HTTP头字段顺序分析，观察HTTP响应头的组织顺序，因为每个服务器都有一个内部的HTTP头排序方法。</p><ul><li><strong>3. 浏览并观察网站</strong></li></ul><p>我们可以观察网站某些位置的HTML源码(特殊的class名称)及其注释(comment)部分，可能暴露有价值信息。观察网站页面后缀可以判断Web应用使用的编程语言和框架。</p><ul><li><strong>4. 刻意构造错误</strong></li></ul><p>错误页面可以给你提供关于服务器的大量信息。可以通过构造含有随机字符串的URL，并访问它来尝试得到404页面。</p><p><strong>（2）利用工具识别</strong></p><p>whatweb是一款用于辅助的自动化Web应用指纹分析工具</p><p><img src="https://image.3001.net/images/20200928/1601250148_5f71236490fc4ac078d23.png!small" alt="img">常规扫描：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whatweb 域名&#x2F;ip地址</span><br></pre></td></tr></table></figure><p><img src="https://image.3001.net/images/20200928/1601250197_5f7123958d72783eeec2e.png!small" alt="img">批量扫描：</p><p>指定要扫描的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whatweb -i 含有需要扫描的域名的文件的路径</span><br></pre></td></tr></table></figure><p>详细回显扫描：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whatweb -v 域名</span><br></pre></td></tr></table></figure><p><img src="https://image.3001.net/images/20200928/1601250265_5f7123d98f282252da843.png!small" alt="img">)<img src="https://image.3001.net/images/20200928/1601250291_5f7123f3d8badee4d718d.png!small" alt="img">Whatweb是一个基于Ruby语言的开源网站指纹识别软件，如上图，正如它的名字一样，whatweb能够识别各种关于网站的详细信息包括：CMS类型、博客平台、中间件、web框架模块、网站服务器、脚本类型、JavaScript库、IP、cookie等等。</p><p>另外，我们可以使用Nmap OS指纹初步判断操作系统。对于后端DBMS的识别，如果主机对外开放DBMS的话，可以通过端口特征判断，尤其是在开放默认端口比如3306、1443、27017等。</p><h3 id="真实IP地址识别"><a href="#真实IP地址识别" class="headerlink" title="真实IP地址识别"></a>真实IP地址识别</h3><p>在渗透测试中，一般只会给你一个域名，那么我们就要根据这个域名来确定目标服务器的真实IP，我们可以通过像<a href="https://www.freebuf.com/articles/web/www.ip138.com" target="_blank" rel="noopener">www.ip138.com</a>这样的IP查询网直接获取目标的一些IP及域名信息，但这里的前提是目标服务器没有使用CDN。</p><p><strong>什么是CDN？</strong></p><p>CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。</p><p>CDN将用户经常访问的静态数据资源直接缓存到节点服务器上，当用户再次请求时，会直接分发到在离用户近的节点服务器上响应给用户，当用户有实际数据交互时才会从远程Web服务器上响应，这样可以大大提高网站的响应速度及用户体验。CDN网络的诞生大大地改善了互联网的服务质量，因此传统的大型网络运营商纷纷开始建设自己的CDN网络。</p><p>因此，如果目标服务器使用了CDN服务，那么我们直接查询到的IP并不是真正的目标服务器的IP，而是一台离你最近的目标节点的CDN服务器，这就导致了我们没法直接得到目标服务器的真实IP。</p><p><strong>如何判断目标服务器使用了CDN？</strong></p><p>我们可以ping这个网站域名，比如我们ping百度：</p><p><img src="https://image.3001.net/images/20200928/1601251439_5f71286f28908a71279fa.png!small" alt="1601251439_5f71286f28908a71279fa.png!small"></p><p>如上图，我们可以看到百度使用了CDN。</p><p>我们也可以设置代理或者通过在线ping网站来在不同地区进行ping测试，然后对比每个地区ping出的IP结果，查看这些IP是否一致，一致，则极有可能不存在CDN。根据 CDN 的工作原理，如果网站使用了 CDN，那么从全国各地访问网站的 IP 地址是各个 CDN 节点的 IP 地址，那么如果ping出来的IP大多不太一样或者规律性很强，可以尝试查询这些IP的归属地，判断是否存在CDN。有以下网站可以进行ping测试：</p><ul><li><a href="http://ping.chinaz.com/" target="_blank" rel="noopener">http://ping.chinaz.com/</a></li><li><a href="https://www.wepcc.com/" target="_blank" rel="noopener">https://www.wepcc.com</a></li><li><a href="https://www.17ce.com/" target="_blank" rel="noopener">https://www.17ce.com</a></li></ul><p>以 <a href="https://www.wepcc.com/为例，如图所示，对" target="_blank" rel="noopener">https://www.wepcc.com/为例，如图所示，对</a> <a href="https://www.baidu.com/" target="_blank" rel="noopener">https://www.baidu.com</a>进行ping命令测试，根据 IP 地址和归属地不同，可以判断 <a href="https://www.baidu.com/" target="_blank" rel="noopener">https://www.baidu.com</a>使用了 CDN。</p><p><img src="https://image.3001.net/images/20200928/1601251978_5f712a8ac684a5dd3b467.png!small" alt="1601251978_5f712a8ac684a5dd3b467.png!small"></p><p><strong>如何绕过CDN找到目标真实IP？</strong></p><p><strong>1.</strong> 利用子域名。一般来说很多站长可能只会对主站或者流量较大的分站使用CDN，但是一些流量比较小的分站可能没有挂CDN，这些分站和主站虽然不是同一个IP但是都在同一个C段下面的情况，所以我们可以通过ping二级域名获取分站lP，从而能判断出目标的真实IP段。</p><p><strong>2.</strong> 查询主域。以前用CDN的时候有个习惯，只让WWW域名使用cdn，秃域名不使用，为的是在维护网站时更方便，不用等cdn缓存。所以试着把目标网站的www去掉，ping一下看ip是不是变了，如下图，这个方法还是挺有效的：</p><p><img src="https://image.3001.net/images/20200928/1601252504_5f712c981c448cb0d3e01.png!small" alt="1601252504_5f712c981c448cb0d3e01.png!small"></p><p><strong>3.</strong>扫描网站敏感文件，如phpinfo.php等，从而找到目标的真实IP。</p><p><strong>4.</strong>从国外访问。国内很多CDN厂商因为各种原因只做了国内的线路，而针对国外的线路可能几乎没有，此时我们使用国外的主机直接访问可能就能获取到真实P。我们可以通过国外在线代理网站访问，可能会得到真实的IP地址，外国在线代理网站：</p><ul><li><a href="https://asm.ca.com/en/ping.php" target="_blank" rel="noopener">https://asm.ca.com/en/ping.php</a></li></ul><p><img src="https://image.3001.net/images/20200928/1601254055_5f7132a738c8119b73e01.png!small" alt="1601254055_5f7132a738c8119b73e01.png!small"></p><p>如上图，从国外代理访问目标网站的IP都是一样的。</p><p><strong>5.</strong>通过邮件服务器。一般的邮件系统都在内部，没有经过CDN的解析，通过目标网站用户注册或者RSS订阅功能，查看邮件，寻找邮件头中的邮件服务器域名IP，ping这个邮件服务器的域名，由于这个邮件服务器的有可能跟目标Web在一个段上，我们直接一个一个扫，看返回的HTML源代码是否跟web的对的上，就可以获得目标的真实IP(必须是目标自己内部的邮件服务器，第三方或者公共邮件服务器是没有用的)。</p><p><strong>6.</strong> 查看域名历史解析记录。也许目标很久之前没有使用CDN，所以可能会存在使用 CDN 前的记录。所以可以通过<a href="https://www.netcraft.com/" target="_blank" rel="noopener">https://www.netcraft.com</a>、<a href="https://viewdns.info/等网站来观察域名的IP历史记录。" target="_blank" rel="noopener">https://viewdns.info/等网站来观察域名的IP历史记录。</a></p><p><strong>7.</strong>Nslookup查询。查询域名的NS记录、MX记录、TXT记录等很有可能指向的是真实ip或同C段服务器。</p><p><strong>8.</strong>利用网络空间搜索引擎。这里主要是利用网站返回的内容寻找真实原始IP，如果原始服务器IP也返回了网站的内容，那么可以在网上搜索大量的相关数据。最常见的网络空间搜索引擎有如下：</p><ul><li>Shodan：<a href="https://www.shodan.io/" target="_blank" rel="noopener">https://www.shodan.io/</a></li><li>钟馗之眼：<a href="https://www.zoomeye.org/" target="_blank" rel="noopener">https://www.zoomeye.org/</a></li><li>FOFA：<a href="https://fofa.so/" target="_blank" rel="noopener">https://fofa.so/</a></li></ul><p><strong>9.</strong> 让目标主动连接我们。</p><p>1、发邮件给我们。比如订阅、注册的时候会有注册连接发送到我们的邮件，然后查看邮件全文源代码或邮件标头，寻找邮件头中的邮件服务器域名IP就可以了。</p><p>2、利用网站漏洞。比如有代码执行漏洞、SSRF、存储型的XSS都可以让服务器主动访问我们预设的web服务器，那么就能在日志里面看见目标网站服务器的真实IP。</p><p>……</p><p><strong>验证获得的真实IP地址</strong></p><p>通过上面的方法获取了很多的IP地址（上面的方法4），此时我们需要确定哪一个才是真正的IP地址，如果是Web，最简单的验证方法是直接尝试用IP访问，看看响应的页面是不是和访问域名返回的一样即可。：</p><h3 id="端口信息收集"><a href="#端口信息收集" class="headerlink" title="端口信息收集"></a>端口信息收集</h3><p>在渗透测试的过程中，收集端口信息是一个十分重要的过程，通过扫描目标服务器开放的端口可以从该端口判断服务器上运行的服务。因为针对不同的端口具有不同的攻击方法，收集端口信息可以对症下药，便于我们渗透目标服务器。我们可以通过一下方法收集目标服务器的端口信息：</p><ul><li><strong>1. 使用nmap工具收集</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -v -T4 -O -sV 目标地址</span><br></pre></td></tr></table></figure><p><img src="https://image.3001.net/images/20200928/1601255035_5f71367b4eeb313a6c6aa.png!small" alt="1601255035_5f71367b4eeb313a6c6aa.png!small"></p><ul><li><strong>2. 使用masscan探测端口开放信息</strong></li></ul><p>Masscan号称是最快的互联网端口扫描器，最快可以在六分钟内扫遍互联网。masscan的扫描结果类似于nmap(一个很著名的端口扫描器)，在内部，它更像scanrand, unicornscan, and ZMap，采用了异步传输的方式。它和这些扫描器最主要的区别是，它比这些扫描器更快。而且，masscan更加灵活，它允许自定义任意的地址范和端口范围。</p><p><img src="https://image.3001.net/images/20200928/1601255458_5f71382286becd0cde096.png!small" alt="1601255458_5f71382286becd0cde096.png!small"></p><p>由于使用工具通常会在目标网站留下痕迹，接下来提供一种在线网站探测方法。</p><ul><li>在线网站：<a href="http://tool.chinaz.com/port/" target="_blank" rel="noopener">http://tool.chinaz.com/port/</a></li><li>ThreatScan在线网站（网站基础信息收集）：<a href="https://scan.top15.cn/" target="_blank" rel="noopener">https://scan.top15.cn/</a></li><li>Shodan：<a href="https://www.shodan.io/" target="_blank" rel="noopener">https://www.shodan.io/</a></li></ul><p><img src="https://image.3001.net/images/20200928/1601255740_5f71393c6b36513051530.png!small" alt="1601255740_5f71393c6b36513051530.png!small"></p><p>常见的端口及其攻击方向可以参考：<a href="https://blog.csdn.net/weixin_42320142/article/details/102679143" target="_blank" rel="noopener">https://blog.csdn.net/weixin_42320142/article/details/102679143</a></p><h2 id="社会工程学"><a href="#社会工程学" class="headerlink" title="社会工程学"></a>社会工程学</h2><p><img src="https://image.3001.net/images/20200928/1601257872_5f71419012284020c8530.jpg!small" alt="img"></p><p>相信看过《我是谁：没有绝对的安全系统》的朋友对社会工程学可能有深刻的印象了。全片的过程中，一直在处处渗透着社会工程学的原理，利用人们的胆小怕事，来获取自己利益。而后来，男主将社会工程学运用到了极致，成功为自己赢得了一个新的身份。</p><p><img src="https://image.3001.net/images/20200928/1601257971_5f7141f3e1094c10bb6d0.jpg!small" alt="img"></p><p>社会工程学（Social Engineering）是一种通过人际交流的方式获得信息的非技术渗透手段。其实，现在的黑客攻击也不止是仅仅通过网络来进行远程的渗透与入侵，还会通过社会工程学在线下场景中来针对人性弱点进行相应的攻击。而且不幸的是，这种手段对于黑客来说非常有效，成功率也非常之高。事实上，社会工程学已是企业安全最大的威胁之一。狭义与广义社会工程学最明显的区别就是是否会与受害者产生交互行为。广义是有针对性的去对某一单一或多一目标进行攻击的行为。社会工程学在渗透测试中起着不小的作用，利用社会工程学，攻击者可以从一名员工的口中挖掘出本应该是秘密的信息。</p><blockquote><p>凯文·米特尼克在《反欺骗的艺术》中曾提到，人为因素才是安全的软肋。很多企业、公司在信息安全上投入大量的资金，最终导致数据泄露的原因，往往却是发生在人本身。你们可能永远都想象不到，对于黑客们来说，通过一个用户名、一串数字、一串英文代码，社会工程师就可以通过这么几条的线索，通过社工攻击手段，加以筛选、整理，就能把你的所有个人情况信息、家庭状况、兴趣爱好、婚姻状况、你在网上留下的一切痕迹等个人信息全部掌握得一清二楚。虽然这个可能是最不起眼，而且还是最麻烦的方法。一种无需依托任何黑客软件，更注重研究人性弱点的黑客手法正在兴起，这就是社会工程学黑客技术。</p></blockquote><p>社会工程学攻击包括四个阶段：</p><ul><li>研究：信息收集（WEB、媒体、垃圾桶、物理），确定并研究目标</li><li>钩子：与目标建立第一次交谈（HOOK、下套）</li><li>下手：与目标建立信任并获取信息</li><li>退场：不引起目标怀疑的离开攻击现场</li></ul><p>社会工程学收集的常见信息包括：姓名、性别、出生日期、身份zheng号、身份zheng家庭住址、身份zheng所在公安局、快递收货地址、大致活动范围、qq、手机号、邮箱、银行card号（银行开户行）、支付宝、贴吧、百度、微博、猎聘、58、同城、网盘、微信、常用ID、学历（小/初/高/大学/履历）、目标性格详细分析、常用密码、照片EXIF信息。</p><p>常见可获取信息系统包括：中航信系统、春秋航空系统、12306系统、三大运营商网站、全国人口基本信息资源库、全国机动车/驾驶人信息资源库、各大快递系统（越权）、全国出入境人员资源库、全国在逃人员信息资源库、企业相关系统、全国安全重点单位信息资源库等。</p><p>举个例子：</p><p>假设我们要对一家公司进行渗透测试，正在收集目标的真实IP阶段，此时就可以利用收集到的这家公司的某位销售人员的电子邮箱。首先，给这位销售人员发送邮件，假装对某个产品很感兴趣，显然销售人员会回复邮件。这样攻击者就可以通过分析邮件头来收集这家公司的真实IP地址及内部电子邮件服务器的相关信息。通过进一步地应用社会工程学，假设现在已经收集了目标人物的邮箱、QQ、电话号码、姓名，以及域名服务商，也通过爆破或者撞库的方法获取邮箱的密码，这时就可以冒充目标人物要求客服人员协助重置域管理密码，甚至技术人员会帮着重置密码，从而使攻击者拿下域管理控制台，然后做域劫持。</p><p>详情请参考：</p><p><a href="https://www.zhihu.com/question/26113526" target="_blank" rel="noopener">https://www.zhihu.com/question/26113526</a></p><p><a href="https://blog.csdn.net/Eastmount/article/details/100585715" target="_blank" rel="noopener">https://blog.csdn.net/Eastmount/article/details/100585715</a></p><p>推荐书籍：</p><p>《黑客心理学》、《欺骗的艺术》</p><h2 id="Ending……"><a href="#Ending……" class="headerlink" title="Ending……"></a>Ending……</h2><p>“知己知彼，百战不殆”，进行web渗透测试之前，最重要的一步那就是就是信息收集了，俗话说“渗透的本质也就是信息收集”，信息收集的深度，直接关系到渗透测试的成败。打好信息收集这一基础可以让测试者选择合适和准确的渗透测试攻击方式，缩短渗透测试的时间。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="WEB学习" scheme="https://itogetheralone.github.io/categories/WEB%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="技术" scheme="https://itogetheralone.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="公司" scheme="https://itogetheralone.github.io/tags/%E5%85%AC%E5%8F%B8/"/>
    
      <category term="网络安全" scheme="https://itogetheralone.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
      <category term="web渗透" scheme="https://itogetheralone.github.io/tags/web%E6%B8%97%E9%80%8F/"/>
    
      <category term="信息收集" scheme="https://itogetheralone.github.io/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
      <category term="转载" scheme="https://itogetheralone.github.io/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>WEB渗透测试的简单分析</title>
    <link href="https://itogetheralone.github.io/2020/09/24/%E8%AE%BA%E6%96%87/"/>
    <id>https://itogetheralone.github.io/2020/09/24/%E8%AE%BA%E6%96%87/</id>
    <published>2020-09-24T14:00:00.000Z</published>
    <updated>2020-09-29T12:39:03.915Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-eSspgUzq" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="4941417121" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p><strong>分类 TP393.08  论文选题类型   应用研究</strong>           </p><h2 id="摘-要"><a href="#摘-要" class="headerlink" title="摘  要"></a>摘  要</h2><p>随着网络技术的发展，人们的生活发生了改变。然而，web技术带来的安全问题也面临着前所未有的挑战。<br>本文提出了几种常见的、危害较大的web网络安全问题和渗透测试方法，为确保web网络安全提供了思路。<br>对于业务系统，从网站的各个方面，渗透测试服务包括信息收集和漏洞检测与利用，内网渗透和总结报告。、渗透测试员可以理解系统的各种防护措施；然后绕过和渗透，最后以获得访问控制的方式进行评估防护水平，制定报告和维护计划。</p><p><strong>关键词：Web安全  信息泄露  渗透测试</strong></p><h2 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h2><p>With the development of network technology, people’s life has changed. However, the security problems brought by Web technology are also facing unprecedented challenges.</p><p>This paper presents several common and harmful web network security problems and penetration testing methods, which provide ideas for ensuring Web network security.</p><p>For business systems, penetration testing services include information collection and vulnerability detection and utilization, Intranet penetration and summary reporting from all aspects of the web site. The penetration tester can understand the various protective measures of the system; Then bypass and infiltrate, and finally assess the level of protection and develop reporting and maintenance plans in the form of access control.</p><p><strong>Keywords: Web security information disclosure penetration test</strong> </p><h2 id="一-绪论"><a href="#一-绪论" class="headerlink" title="一      绪论"></a>一      绪论</h2><h3 id="导论"><a href="#导论" class="headerlink" title="导论"></a>导论</h3><p>Web2.0以后，计算机的Web应用发展的非常迅速，Web应用平台被应用到多个领域。在方便用户使用的同时，随之而来的安全问题也很多，造成信息泄露，严重影响了个人隐私，为生产生活带来了安全隐患。Web应用程序出现安全漏洞的原因有很多。首先，开发人员编写程序时没有进行统一的安全培训和编码规范，造成代码脚本出现漏洞。其次，对用户的输入没有进行验证，导致被黑客利用，提取数据库权限，造成信息泄露。还有，客户端的HTTP请求头被蓄意修改，让用户跳转到钓鱼网站，获取到用户的敏感信息，造成经济损失。因此Web网站的安全问题亟待解决。Web渗透测试技术是目前针对Web安全的防护技术，有效地对Web网站漏洞进行扫描，找到安全隐患。渗透攻击测试是建立模拟攻击黑客代码的攻击测试方法，用于测评网络服务器系统安全状况的一种测试评估方法。本文介绍了Web应用存在的几种安全问题，以及相应的渗透测试方法。[1] </p><h4 id="选题背景"><a href="#选题背景" class="headerlink" title="选题背景"></a>选题背景</h4><p>在网络技术快速发展的今天，网络显然已经成为了人类生活当中必不可少的技术之一。与之对应的是，人们意识到了网络安全问题的重要性，得到了全世界广泛关注。[2]</p><h4 id="选题意义"><a href="#选题意义" class="headerlink" title="选题意义"></a>选题意义</h4><p>在互联网技术被广泛应用的同时，人们可以用网络平台完成各种信息资料的传输，便利了人们的生活与工作，有效共享了信息资源。当然不论是什么事物都存在两面性特征。信息技术同样也有许多缺点需要重视。因为网络技术本身存在很强开放性，所以如果其硬件、软件有漏洞就会遭到黑客攻击，导致信息泄露。对此为了解决该问题，就需要加强计算机网络管理工作[2]</p><h4 id="课题研究内容、要求及目标"><a href="#课题研究内容、要求及目标" class="headerlink" title="课题研究内容、要求及目标"></a>课题研究内容、要求及目标</h4><p>研究内容：web漏洞的原理分析与渗透测试的简单思路<br>要求：思路清晰，原理明确<br>本课题最终将达到如下几个目标：</p><p>1.对原理的阐述明确<br>2.渗透测试的思路清晰<br>3.对常见的渗透测试工具有所了解。</p><h3 id="本章小结"><a href="#本章小结" class="headerlink" title="本章小结"></a>本章小结</h3><p>本章介绍了选题的背景和意义，并对课题的要求和研究内容作了分析，是研究的前期基础。 </p><h2 id="二-常见web漏洞"><a href="#二-常见web漏洞" class="headerlink" title="二      常见web漏洞"></a>二      常见web漏洞</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>本章是根据OWASP上对于web安全漏洞的排名写出来的，危害度与常见程度是关键的因素。并且DVWA（Damn Vulnerable Web Application）也给了我很多的启发。DVWA上面的题目对我的研究学习很有帮助。</p><h3 id="渗透测试流程"><a href="#渗透测试流程" class="headerlink" title="渗透测试流程"></a>渗透测试流程</h3><h4 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h4><p>注入类的漏洞是WEB漏洞中的一个大分类，其中以SQL注入最为常见，危害极大。SQL注入攻击的原理主要是由于网站开发者未对用户的输入或者用户的请求包中的语句与特殊字符等做过滤或者转义。这就导致恶意人员输入的恶意语句在传递到网站后台之后被网站后台数据库当做是合法的输入从而执行，达到攻击者所想要达到的目的。我认为网站开发时，需要遵循“用户的一切输入都是不可信的”这一个大原则，对一切外来输入都要做一个严格的审查，这样就可以很好的提高安全性。</p><h4 id="XSS跨站脚本攻击"><a href="#XSS跨站脚本攻击" class="headerlink" title="XSS跨站脚本攻击"></a>XSS跨站脚本攻击</h4><p>跨站点脚本攻击其实就是指在WEB服务器端的网页代码（如HTML）中插入一段有攻击者目的的恶意代码（如JavaScript），跨站点脚本攻击其实还是属于注入类的漏洞。当用户使用浏览器访问这个网页的过程中，服务器端的恶意脚本语句将被用户浏览器当做是正常的WEB服务传递的网页代码解释并执行，从而攻击了客户端的机器。达到了攻击者的目的。这依然需要遵循“用户的一切输入都是不可信的”这一个大原则，这样也可以在一定程度上避免跨站脚本攻击对WEB服务造成影响。</p><h4 id="文件上传漏洞"><a href="#文件上传漏洞" class="headerlink" title="文件上传漏洞"></a>文件上传漏洞</h4><p>WEB文件上传漏洞一般是因为WEB服务的程序代码对文件的过滤不够严谨导致的，比如WEB中关于上传程序的后台代码缺少对于文件的后缀类型的过滤，这样就造成了恶意人员可以通过Web访问的目录地址，上传有含有恶意代码的文件，然后通过工具可以连接到网络中的服务器主机后台，获取管理员的权限，造成对主机的控制。所以，在涉及WEB服务中的文件上传需求时，一定要谨慎，需要特别重视对文件类型的限制，防止含有恶意代码的文件上传到服务器后台。再次提出一个原则，给“用户能达到需求的最小权限”，这个原则在操作系统用户管理中也可以用到。至于服务器的文件解析漏洞这里先不做讨论。</p><h4 id="文件包含漏洞"><a href="#文件包含漏洞" class="headerlink" title="文件包含漏洞"></a>文件包含漏洞</h4><p>文件包含漏洞是由于恶意人员向Web网络服务器发送请求时，在请求头中增加了恶意的特意构造的参数，服务器接收端的程序代码对参数变量的过滤不完整，造成恶意的文件名被服务器后台当作是正常的参数从而执行。这些恶意的文件名可能是服务器后台的敏感文件，也可能是客户端的恶意人员专门编写的恶意文件。这类漏洞是由于PHP中的包含文件的include函数对参数的过滤不完整导致的，所以只有基于PHP语言开发的Web服务才有可能存在文件包含漏洞。</p><h4 id="信息泄露漏洞"><a href="#信息泄露漏洞" class="headerlink" title="信息泄露漏洞"></a>信息泄露漏洞</h4><p>在WEB开发人员进行网页代码编写过程中，在网页代码中添加备注以及注释，以便于以后对网页代码的理解和维护。网页开发完毕后，若没有删除或者过滤掉注释信息，恶意人员便可以通过对注释信息的收集，获得系统的指纹信息，为进一步的攻击做准备。</p><h3 id="本章小结-1"><a href="#本章小结-1" class="headerlink" title="本章小结"></a>本章小结</h3><p>本章对于常见的影响WEB安全的漏洞进行了列举，对SQL注入，XSS跨站脚本攻击，文件上传漏洞，文件包含漏洞，信息泄露的原理做了阐述。并且提出了两个网站开发的时候可以提升WEB服务安全性的原则。作为对网站开发者的建议。<br>原则一：用户的一切输入都是不可信的。<br>原则二：用户能达到需求的最小权限。  </p><h2 id="三-渗透测试流程的简单分析"><a href="#三-渗透测试流程的简单分析" class="headerlink" title="三      渗透测试流程的简单分析"></a>三      渗透测试流程的简单分析</h2><h3 id="前言-1"><a href="#前言-1" class="headerlink" title="前言"></a>前言</h3><p>上文对常见的web漏洞做了简单的分析，那么对于这些漏洞应该怎么解决？其实渗透测试就是一种非常好的手段，也是现在常见的手段。</p><h3 id="渗透测试的流程"><a href="#渗透测试的流程" class="headerlink" title="渗透测试的流程"></a>渗透测试的流程</h3><h4 id="明确目标"><a href="#明确目标" class="headerlink" title="明确目标"></a>明确目标</h4><p>主要是需要确定渗透测试的范围，确定渗透的规则方式，确定渗透的需求，需要测试到什么程度。</p><h4 id="漏洞扫描"><a href="#漏洞扫描" class="headerlink" title="漏洞扫描"></a>漏洞扫描</h4><p>主要是扫描（挖掘）出操作系统的漏洞，web服务器漏洞，web应用漏洞以及其他端口所对应的服务的漏洞，如IIS,Telnet,SSH，SAMBA文件共享，远程桌面连接（3389）等。</p><h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>漏洞利用主要是对探测到的漏洞进行攻击，方法主要就是工具加手工，工具如metasploit，也可手工在网络上查找公开的对应版本的漏洞，用来进行渗透测试。</p><h4 id="提升权限"><a href="#提升权限" class="headerlink" title="提升权限"></a>提升权限</h4><p>提升权限主要是在当前用户权限的权限不足以完成自己的需求的时候去想办法提升自身的权限以完成自己的需求，提升权限可以是提升系统权限（如用户权限），web应用权限或是数据库的操作权限等。</p><h4 id="清除痕迹"><a href="#清除痕迹" class="headerlink" title="清除痕迹"></a>清除痕迹</h4><p>清除痕迹主要是清除渗透过程中进行的操作的一些痕迹，如添加的用户，上传的恶意文件，操作的日志等。</p><h4 id="事后信息分析"><a href="#事后信息分析" class="headerlink" title="事后信息分析"></a>事后信息分析</h4><p>主要是对整个渗透过程进行分析与整理，分析测试目标的弱点，技术防护的程度以及权限管理方面的情况，进行一个情况分析然后提出相关的建议。</p><h4 id="编写渗透测试报告"><a href="#编写渗透测试报告" class="headerlink" title="编写渗透测试报告"></a>编写渗透测试报告</h4><p>根据渗透测试的过程编写渗透测试报告，渗透测试报告要求：</p><p>1.简洁，清晰阐述渗透范围，攻击方式，渗透成果，以及详细的漏洞详情（相关描述，漏洞危害等）及具有可行的修复建议，最后对整体渗透及修改情况进行简单的总结和分析，<br>2.清晰阐述目前的状况，应该从哪些方面进行加固和提升</p><h4 id="渗透测试相关原则"><a href="#渗透测试相关原则" class="headerlink" title="渗透测试相关原则"></a>渗透测试相关原则</h4><ol><li>最小影响原则</li><li>非破坏性原则</li><li>全面深入原则</li><li>保密性原则[3]</li></ol><h3 id="本章小结-2"><a href="#本章小结-2" class="headerlink" title="本章小结"></a>本章小结</h3><p>本章对于渗透测试的流程做了一个简单的分析，这是一个非常实用的测试思路，对于提升网站的安全很有帮助。</p><h2 id="四-结束语"><a href="#四-结束语" class="headerlink" title="四      结束语"></a>四      结束语</h2><p>随着信息社会的发展，大量的私密信息在网上流通，网站和用户数据的安全就显得越发重要。而其中web更是网络中的重要阵地。本文对于Web安全问题，以及渗透测试的方法做了一个简单地分析，为解决系统潜在的安全风险，缩小漏洞造成的损失，提供了一定的帮助。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>[1] 肖鹏. 浅谈Web渗透测试技术  [A]. 1674-098X(2019)06(b)-0132-02<br>[2] 姜可. 计算机网络安全与漏洞扫描技术的应用研究.<br>[3] 渗透测试基本流程：简书．<a href="https://www.jianshu.com/p/433d9d532c93" target="_blank" rel="noopener">https://www.jianshu.com/p/433d9d532c93</a><br>[4] 邓泽龙.浅析WEB渗透信息收集 [J]. 电子元器件与信息技术 ,2020,4(4):24-25+32. </p><h2 id="致-谢"><a href="#致-谢" class="headerlink" title="致  谢"></a>致  谢</h2><p>首先，要感谢我的指导老师熊陶。在毕业论文和设计的完成过程中，熊陶老师在百忙之中查阅和修改本论文，给予了很多悉心的指导，对论文的修改建议很细致，给予了很多完善论文的启发。熊陶老师这种严谨治学的态度，让我肃然起敬，同时深厚的理论水平也让我受益匪浅。在指出论文中存在的问题和提供建设性修改意见的同时，也不忘鼓励我发扬长处，让我很受欣慰和鼓舞，从熊陶老师身上，我学到了很多东西，从做人，做事，到求学，治学，包括发现问题，分析问题，解决问题的态度和技巧，都将是我今后工作和生活受用无穷的宝贵经验财富。通过与熊陶老师问题的交流和整个论文及毕业设计的完成实现的过程，我在各个方面都得到了很大的提高，在这里，学生真诚地对熊陶老师表示深深的感激与谢意。<br>其次，还要感谢我的那帮可爱的同学们，在设计过程他们也给予了很多帮助，给予了我很多新奇的创意和开阔的思路，在此向他们表示感谢。<br>通过这一阶段的学习和研究，系统终于得以实现，其中耗费了很多精力和时间，但本次设计是大学对即将走进社会的我们的一次知识和能力的综合考验，这将是激励我去创造的一个起点，会永远激励着我前进。<br>最后，还是要再次衷心地感谢这些年来给予我帮助的所有亲人，老师，朋友和同学们，谢谢你们！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="WEB学习" scheme="https://itogetheralone.github.io/categories/WEB%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学校" scheme="https://itogetheralone.github.io/tags/%E5%AD%A6%E6%A0%A1/"/>
    
      <category term="技术" scheme="https://itogetheralone.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网络安全" scheme="https://itogetheralone.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
      <category term="web渗透" scheme="https://itogetheralone.github.io/tags/web%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>XML基础学习（一）</title>
    <link href="https://itogetheralone.github.io/2020/09/24/XML%E5%AD%A6%E4%B9%A0/"/>
    <id>https://itogetheralone.github.io/2020/09/24/XML%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-09-24T13:00:00.000Z</published>
    <updated>2020-09-30T12:52:41.114Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-IFzvMuxj" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="4941417121" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><h2 id="XML-简介"><a href="#XML-简介" class="headerlink" title="XML 简介"></a>XML 简介</h2><p>XML 被设计用来传输和存储数据。<br>HTML 被设计用来显示数据。</p><h3 id="什么是-XML"><a href="#什么是-XML" class="headerlink" title="什么是 XML?"></a>什么是 XML?</h3><p>XML 指可扩展标记语言（EXtensible Markup Language）<br>XML 是一种标记语言，很类似 HTML<br>XML 的设计宗旨是传输数据，而非显示数据<br>XML 标签没有被预定义。您需要自行定义标签。<br>XML 被设计为具有自我描述性。<br>XML 是 W3C 的推荐标准</p><h3 id="XML-与-HTML-的主要差异"><a href="#XML-与-HTML-的主要差异" class="headerlink" title="XML 与 HTML 的主要差异"></a>XML 与 HTML 的主要差异</h3><p>XML 不是 HTML 的替代。<br>XML 和 HTML 为不同的目的而设计：<br>XML 被设计为传输和存储数据，其焦点是数据的内容。<br>HTML 被设计用来显示数据，其焦点是数据的外观。<br>HTML 旨在显示信息，而 XML 旨在传输信息。</p><h3 id="XML-是不作为的"><a href="#XML-是不作为的" class="headerlink" title="XML 是不作为的"></a>XML 是不作为的</h3><p>XML 不会做任何事情。XML 被设计用来结构化、存储以及传输信息。<br>XML 文档没有做任何事情。它仅仅是包装在 XML标签中的纯粹的信息。我们需要编写软件或者程序，才能传送、接收和显示出这个文档。</p><h3 id="XML-仅仅是纯文本"><a href="#XML-仅仅是纯文本" class="headerlink" title="XML 仅仅是纯文本"></a>XML 仅仅是纯文本</h3><p>XML 没什么特别的。它仅仅是纯文本而已。有能力处理纯文本的软件都可以处理 XML。<br>能够读懂XML的应用程序可以有针对性地处理XML的标签。标签的功能性意义依赖于应用程序的特性。</p><h3 id="XML-没有预定义的标签。"><a href="#XML-没有预定义的标签。" class="headerlink" title="XML 没有预定义的标签。"></a>XML 没有预定义的标签。</h3><p>在 HTML 中使用的标签（以及 HTML 的结构）是预定义的。HTML 文档只使用在 HTML 标准中定义过的标签（比如 <p> 、<h1> 等等）。<br>XML 允许创作者定义自己的标签和自己的文档结构。<br>XML 不是对 HTML 的替代<br>XML 是对 HTML 的补充。<br>XML 不会替代 HTML，在大多数 web 应用程序中，XML 用于传输数据，而 HTML 用于格式化并显示数据。</p><h3 id="XML-无所不在"><a href="#XML-无所不在" class="headerlink" title="XML 无所不在"></a>XML 无所不在</h3><p>目前，XML 在 Web 中起到的作用不会亚于一直作为 Web 基石的 HTML。<br>XML 是各种应用程序之间进行数据传输的最常用的工具，并且在信息存储和描述领域变得越来越流行。</p><p>对 XML 最好的描述是：<br>XML 是独立于软件和硬件的信息传输工具。<br>XML 是 W3C 的推荐标准<br>可扩展标记语言 (XML) 于 1998 年 2 月 10 日成为 W3C 的推荐标准。</p><h2 id="XML-的用途"><a href="#XML-的用途" class="headerlink" title="XML 的用途"></a>XML 的用途</h2><p>XML 应用于 web 开发的许多方面，常用于简化数据的存储和共享。</p><h3 id="XML-把数据从-HTML-分离"><a href="#XML-把数据从-HTML-分离" class="headerlink" title="XML 把数据从 HTML 分离"></a>XML 把数据从 HTML 分离</h3><p>如果你需要在 HTML 文档中显示动态数据，那么每当数据改变时将花费大量的时间来编辑 HTML。</p><p>通过 XML，数据能够存储在独立的 XML 文件中。这样你就可以专注于使用 HTML 进行布局和显示，并确保修改底层数据不再需要对 HTML 进行任何的改变。</p><p>通过使用几行 JavaScript，你就可以读取一个外部 XML 文件，然后更新 HTML 中的数据内容。</p><h3 id="XML-简化数据共享"><a href="#XML-简化数据共享" class="headerlink" title="XML 简化数据共享"></a>XML 简化数据共享</h3><p>在真实的世界中，计算机系统和数据使用不兼容的格式来存储数据。</p><p>XML 数据以纯文本格式进行存储，因此提供了一种独立于软件和硬件的数据存储方法。</p><p>这让创建不同应用程序可以共享的数据变得更加容易。</p><h3 id="XML-简化数据传输"><a href="#XML-简化数据传输" class="headerlink" title="XML 简化数据传输"></a>XML 简化数据传输</h3><p>通过 XML，可以在不兼容的系统之间轻松地交换数据。</p><p>对开发人员来说，其中一项最费时的挑战一直是在因特网上的不兼容系统之间交换数据</p><p>由于可以通过各种不兼容的应用程序来读取数据，以 XML 交换数据降低了这种复杂性。</p><h3 id="XML-简化平台的变更"><a href="#XML-简化平台的变更" class="headerlink" title="XML 简化平台的变更"></a>XML 简化平台的变更</h3><p>升级到新的系统（硬件或软件平台），总是非常费时的。必须转换大量的数据，不兼容的数据经常会丢失。</p><p>XML 数据以文本格式存储。这使得 XML 在不损失数据的情况下，更容易扩展或升级到新的操作系统、新应用程序或新的浏览器。</p><p>XML 使您的数据更有用</p><p>由于XML独立于硬件、软件以及应用程序,不同的应用程序都能够访问您的数据，不仅仅在 HTML 页中，也可以从 XML 数据源中进行访问。</p><p>通过 XML，您的数据可供各种阅读设备使用</p><p>XML 用于创建新的 Internet 语言<br>很多新的 Internet 语言是通过 XML 创建的：</p><p>其中的例子包括：</p><p>XHTML - 最新的 HTML 版本<br>WSDL - 用于描述可用的 web service<br>WAP 和 WML - 用于手持设备的标记语言<br>RSS - 用于 RSS feed 的语言<br>RDF 和 OWL - 用于描述资源和本体<br>SMIL - 用于描述针针对 web 的多媒体</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="WEB学习" scheme="https://itogetheralone.github.io/categories/WEB%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学校" scheme="https://itogetheralone.github.io/tags/%E5%AD%A6%E6%A0%A1/"/>
    
      <category term="技术" scheme="https://itogetheralone.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="XML" scheme="https://itogetheralone.github.io/tags/XML/"/>
    
  </entry>
  
  <entry>
    <title>基于Zabbix的Linux自动化监控系统简单配置</title>
    <link href="https://itogetheralone.github.io/2020/09/23/zabbix/"/>
    <id>https://itogetheralone.github.io/2020/09/23/zabbix/</id>
    <published>2020-09-23T14:00:00.000Z</published>
    <updated>2020-09-29T13:21:30.753Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-mYIZuuxN" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="4941417121" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>配置centos7主机网卡配置为NAT，进入系统修改网卡配置为自动，修改主机名为s1</p><p>配置s1的yum源和zabbix源为aliyun源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">配置阿里云zabbix yum源</span><br><span class="line">rpm -ivh https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;zabbix&#x2F;zabbix&#x2F;3.0&#x2F;rhel&#x2F;7&#x2F;x86_64&#x2F;zabbix-release-3.0-1.el7.noarch.rpm</span><br><span class="line"></span><br><span class="line">下载repo文件</span><br><span class="line">wget http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;Centos-7.repo</span><br><span class="line"></span><br><span class="line">执行下面步骤生成缓存</span><br><span class="line">yum makecache</span><br><span class="line"></span><br><span class="line">打开 &#x2F;etc&#x2F;yum.repos.d&#x2F;zabbix.repo 将下列两行内容覆盖掉原来的内容</span><br><span class="line">[zabbix]</span><br><span class="line">name&#x3D;Zabbix Official Repository - \$basearch</span><br><span class="line">baseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;zabbix&#x2F;zabbix&#x2F;3.0&#x2F;rhel&#x2F;7&#x2F;\$basearch&#x2F;        #就是这一行</span><br><span class="line">gpgcheck&#x3D;1</span><br><span class="line">gpgkey&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-ZABBIX-A14FE591</span><br><span class="line">  </span><br><span class="line">[zabbix-non-supported]</span><br><span class="line">name&#x3D;Zabbix Official Repository non-supported - \$basearch</span><br><span class="line">baseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;zabbix&#x2F;non-supported&#x2F;rhel&#x2F;7&#x2F;\$basearch&#x2F;   #就是这一行</span><br><span class="line">enabled&#x3D;1</span><br><span class="line">gpgkey&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-ZABBIX</span><br><span class="line">gpgcheck&#x3D;1</span><br><span class="line"></span><br><span class="line">在控制台添加gpgkey</span><br><span class="line">curl https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;zabbix&#x2F;RPM-GPG-KEY-ZABBIX-A14FE591 \ -o &#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-ZABBIX-A14FE591</span><br><span class="line">curl https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;zabbix&#x2F;RPM-GPG-KEY-ZABBIX \ -o &#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-ZABBIX</span><br><span class="line"></span><br><span class="line">执行更新源命令</span><br><span class="line">yum makecache -y</span><br><span class="line"></span><br><span class="line">再安装</span><br><span class="line">yum -y install zabbix-server-mysql zabbix-web-mysql zabbix-get</span><br><span class="line"></span><br><span class="line">后续客户端也要执行上述过程才可以安装</span><br><span class="line">yum -y install zabbix-agent</span><br></pre></td></tr></table></figure><p>克隆s1主机为a1，并修改主机名为a1</p><p>安装mariadb，php，httpd等软件包</p><blockquote><p>yum -y install mariadb mariadb-server php php-mysql httpd</p></blockquote><p>启动httpd服务，并打开测试页</p><blockquote><p>systemctl start httpd</p></blockquote><p>启动mariadb数据库，并初始化数据库，设置root密码</p><blockquote><p>systemctl start mariadb<br>mysql_secure_installation</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#输入数据库中root用户密码（默认为空，按回车即可）</span><br><span class="line">Enter current password for root (enter for none): </span><br><span class="line">OK, successfully used password, moving on...</span><br><span class="line">#是否设置root密码？是</span><br><span class="line">Set root password? [Y&#x2F;n] y</span><br><span class="line">New password: </span><br><span class="line">Re-enter new password: </span><br><span class="line">Password updated successfully!</span><br><span class="line">Reloading privilege tables..</span><br><span class="line"> ... Success!</span><br><span class="line">#是否移除匿名用户？是</span><br><span class="line">Remove anonymous users? [Y&#x2F;n] y</span><br><span class="line"> ... Success!</span><br><span class="line"></span><br><span class="line">#是否禁止root用户远程登陆？是（亦可按回车跳过，保留默认设置）</span><br><span class="line">Disallow root login remotely? [Y&#x2F;n] n</span><br><span class="line">... skipping.</span><br><span class="line"></span><br><span class="line">#是否删除测试用的数据库和权限？是</span><br><span class="line">Remove test database and access to it? [Y&#x2F;n] y</span><br><span class="line"> - Dropping test database...</span><br><span class="line"> ... Success!</span><br><span class="line"> - Removing privileges on test database...</span><br><span class="line"> ... Success!</span><br><span class="line"></span><br><span class="line">#重新加载权限表？是</span><br><span class="line">Reload privilege tables now? [Y&#x2F;n] y</span><br><span class="line"> ... Success!</span><br></pre></td></tr></table></figure><p>创建数据库和登录数据库的用户及密码，并且设置用户登录数据库的权限，最后测试用户登录数据库显示创建的数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">（1）创建Zabbix数据库</span><br><span class="line"></span><br><span class="line">mysql -uroot –p123456 -e &quot;create database zabbix default character set utf8 collate utf8_bin;&quot;</span><br><span class="line"></span><br><span class="line">（2）创建Zabbix用户</span><br><span class="line"></span><br><span class="line">useradd zabbix</span><br><span class="line">passwd zabbix</span><br><span class="line">mysql -uroot –p123456 -e &quot;grant all on zabbix.*to &#39;zabbix&#39;@&#39;%&#39; identified by &#39;zabbix&#39;;&quot;</span><br><span class="line"></span><br><span class="line">（3）测试Zabbix用户</span><br><span class="line"></span><br><span class="line">mysql -uzabbix –pzabbix#使用zabbix登陆数据库</span><br></pre></td></tr></table></figure><p>安装Zabbix Server端等各个软件包</p><blockquote><p>yum -y install zabbix-server-mysql zabbix-web-mysql zabbix-get </p></blockquote><p>导入表结构</p><blockquote><p>cd /usr/share/doc/zabbix-server-mysql-3.0.31/<br>zcat create.sql.gz | mysql -uroot –p123456 zabbix</p></blockquote><p>修改配置文件zabbix_server.conf和修改配置文件zabbix.conf</p><p>使用Vi编辑器打开该文件<strong>/etc/zabbix/zabbix_server.conf</strong>，按照如下信息对其中的相应选项进行设置：</p><p><strong>DBHost=localhost<br>DBName=zabbix<br>DBUser=zabbix<br>DBPassword=zabbix</strong></p><p>修改配置文件zabbix.conf</p><p>使用Vi编辑器打开该文件<strong>/etc/httpd/conf.d/zabbix.conf</strong></p><blockquote><p>php_value date.timezone Asia/Shanghai </p></blockquote><p>启动zabbix-server并重启httpd服务</p><blockquote><p>systemctl start zabbix-server<br>systemctl restart httpd</p></blockquote><p>配置zabbix的web页面</p><p>在主机s1和克隆主机a1上安装zabbix-agent</p><blockquote><p>yum -y install zabbix-agent</p></blockquote><p>配置两台主机的zabbix-agent文件并启动两台主机的zabbix-agent服务<br>打开<strong>etc/zabbix/zabbix_agentd.conf<br>修改server=192.168.153.128<br>Serverative=192.168.153.128<br>Hostname=192.168.153.129</strong></p><p>重启：</p><blockquote><p>systemctl start zabbix-agent</p></blockquote><p>开启防火墙端口</p><blockquote><p>firewall-cmd –zone=public –add-port=10050/tcp –permanent</p></blockquote><p>关闭SELinux</p><p>在主机s1测试zabbix连通性</p><blockquote><p>zabbix_get -s 192.168.255.158 -k system.uname</p></blockquote><p>登录zabbix的web管理页，创建一个新用户</p><p>创建两个主机</p><p>创建一个item</p><p>创建一个Trigger</p><p>创建一个Action</p><p>浏览Monitoring→Events，过滤器中选择触发器“CPUStatus”，显示内容</p><p>将a1主机绑定任意template</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="系统管理" scheme="https://itogetheralone.github.io/categories/%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="学校" scheme="https://itogetheralone.github.io/tags/%E5%AD%A6%E6%A0%A1/"/>
    
      <category term="技术" scheme="https://itogetheralone.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Linux" scheme="https://itogetheralone.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>“努力就会成功”</title>
    <link href="https://itogetheralone.github.io/2020/03/24/%E5%8A%AA%E5%8A%9B%E5%B0%B1%E4%BC%9A%E6%88%90%E5%8A%9F/"/>
    <id>https://itogetheralone.github.io/2020/03/24/%E5%8A%AA%E5%8A%9B%E5%B0%B1%E4%BC%9A%E6%88%90%E5%8A%9F/</id>
    <published>2020-03-24T14:59:20.000Z</published>
    <updated>2020-05-15T14:22:47.426Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-jVNKhxHj" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="4941417121" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><h2 id="“努力就会成功”"><a href="#“努力就会成功”" class="headerlink" title="“努力就会成功”"></a>“努力就会成功”</h2><p><strong>转载自陈皓-酷壳CoolShell</strong></p><p>那一年，我加入了某知名公司的某知名部门，在办公室中，我看到了到处都挂着——“努力就会成功”的条幅，这个部门中大多数员工的邮件签名都会有“努力就会成功”，我感到一种热血沸腾的气氛，这是我在多年工作来都没有感受到的，当时挺高兴地能和这样一群人工作，也没多想。直到有一天，我看到这些高级的软件工程师们把自己关在又挤又吵的会议室中，拼命地加班，真是拼命，周一到周日，每天早上10点到凌晨3点甚至凌晨5点，连国庆节都来上班，就在这样的环境和状态下，连续干了三个多月……上线前，QA找到了1000多个bug（你没看错，就是一千多个），最后这个项目用了1年多的时间来返工，本来一个6-8个月的项目，团队被打了鸡血想在3个月内完成，最终却花了近两年的时间来返工……（要知道，我以前在外国公司工作，外国老板看到团队在长时间加班会感到焦虑的，因为加班通常代表着有不好的事情正在发生……）</p><p>所以对此，我是有点看不懂的，看不懂的是，为什么这么一群聪明的人，放着明亮宽敞的办公桌不用，硬要挤在一个又窄又小又吵又热的小空间里工作，而且要这么透支地写那么重要的很关键的系统级的代码……这就好像，一架在一个小作坊里被人加班加点赶工出来的飞机，谁敢坐啊？！老实说，这群工程师真是很优秀的工程师，他们完全是可以做得更好的……但是却做出了如此蹩脚和糟糕的系统……他们说，这样坐在一起可以做到快速沟通，然而，我觉得这恰恰是一种没有章法的表现。</p><p>也是在这家公司，在这个项目烂尾一年前，公司感到了危机，CEO号召全体996，举全公司之力从董事长到下面基层员工对抗外部所谓的威胁，有的部门为了表现，甚至997，然而，在一年后，做出了一个烂得不能再烂的软件，最终以失败告终，很多人包括CEO也因此下课……</p><p>这是最让我看不懂的一个事了，为什么这么如此成功的公司的高级管理层会做出这样的事情，而且还制定这样的政策……把这么优秀的员工以及公司大把把数以亿计的钞票投入到这种错误的路线上来，而且还拼命地加班…… 他们脑子里在想什么呢？难道他们真的以为，有足够多的钱，足够多的人，然后拼命加班，就能打败对手吗？……</p><h2 id="你喜欢这句话吗？"><a href="#你喜欢这句话吗？" class="headerlink" title="你喜欢这句话吗？"></a><strong>你喜欢这句话吗？</strong></h2><p>“努力就会成功”，“加班就会有成就”，“勤劳就会致富”……是这样吗？仔细思考一些，这些话存在严重的逻辑问题，我们在高中的时候学过“充分条件”，“必要条件”和“充要条件”！<strong>“努力就会成功”这句话，把“努力”说成了“成功”的充要条件，这不就是错的吗？努力只是成功的必要条件之一。</strong>你在错误的方向或是格局很小的方向上努力，能有用么？你努力地要饭，你努力地当搬运工，你努力地打骚扰电话销卖保险…… 在错误和小格局的方向上努力，你还觉得努力还有用吗？</p><p>但是很多人是很喜欢“努力就会成功”这句话，这类人也很喜欢看很多小人物通过自己的努力变成成功人士的励志的故事，为什么这种故事会被很多人喜欢甚至感动。因为这很符合大众的心理诉求，这种诉求其实就是一种只要使力只要拼命了就可以成功的心理诉求，<strong>因为这类人基本上都是能力有限，不知道怎么提升自己的人，当他们看到只要拼命使力就可以成功的观点时，他们就会有共鸣，就会感到，不用学习那些晦涩难懂高级的知识，不用掌握和练习哪些高级技能，自己只需要在低级的事情上拼命和努力，加更多的班和干更多活，自己就会像电影中的那些小人物一样，总有一天会成功的……<br>“努力就会成功，勤劳就会致富”，不但符合那些低级管理者的利益诉求，同样符合那些能力不足不愿意学习和成长的人的诉求。因为，他们混淆了行动与进展，忙碌与多产，他们以为能靠蛮力可以弥补思维上的惰性，靠拼命可以弥补能力上的不足……</strong></p><p>喜欢或认同这句话的人基本是能力上有问题的人，这类适合做劳动密集型的事。不信你可以试试看，当一件事的难度超过一定程度的时候，那些聪明的人会找到更省力的方法，而能力上有问题的，还是在那使蛮力。</p><h2 id="我成长的过程"><a href="#我成长的过程" class="headerlink" title="我成长的过程"></a><strong>我成长的过程</strong></h2><p>回想我的过去，我在2001年那年被外包到了某银行做开发，标准的9/10/6，封闭开发，就是用C语言在AIX系统里堆一些银行的交易逻辑，老实说，这个过程并没有让我学到什么东西，也没有什么成长，我每天想的就是我要离开这个地方，所以，我在晚上10点以后开始看书学习到11点半，并使用工作环境动手实践书上的代码，一年后，我精读了《TCP/IP详解》《Windows核心编程》《Java编程思想》等书。然后，我找到一份外企业的工作，月薪一下翻了三倍。</p><p>在外企不加班，但是当时的外企压力也很大，对代码的质量要求的也很高，来的第二个月，就因为代码写的太差，差点被开掉，所以，为了能够达到更高的标准，我自然也是很努力的，在周末甚至黄金周节假日我哪里都不去，我就去公司，但我不是在公司上班，因为我没有自己的电脑，所以，我只能蹭公司的电脑，这导致办公楼的管理人员经常打电话给我让我帮他在周末的时候管理物业…… <strong>在这家公司是我成长最快的时候，然而，并不是因为我的努力，而是因为有很多比我牛逼的人在Code Review上给我大量的帮助，在项目上帮助我，我的努力学习虽然也有作用，但更多的是高手对我的帮助。</strong></p><p><strong>再回想一下我以前在职场上的很多关键点，不是因为我加班了，而是因为在某些关键问题上，我跳出来解决了其它人都解决不了的问题，</strong>我解决了一个网络通信莫名其妙的断掉的问题，我把性能优化了很多倍，我解决了一个不能重现的一个困扰团队3个星期的问题（其实就是大家没有认真读文档），我在入职一个公司的第一天里就为这个公司解决了一个历史遗留问题……在Platform，我每周解决了bug数是全公司的其它人的总和还要多（从不加班），在路透，我带团队优化的系统的性能是全球所有研发中心最高的，在亚马逊，两周打通美国和德国的订单和商品列表系统……我也有失败的时候，<strong>而我失败的时候，总是因为我搞不定事，即便是加班拼命努力也无济于事！</strong>是的，我的职业生涯的成长，最根本的不是你有多努力，有多勤奋，而是你能搞定很多人搞不定的事！</p><p>你不信你可以看看你们公司那些不用加班，就算什么也不干，公司也要花钱养的技术人员，他们的成功一定不是努力和加班加出来的，<strong>你会发现这些人拼的不是谁干的多，而是谁解决的问题更有难。</strong></p><p><strong>我加班996的时候，从来都不是我成长最快的时候，而我和一群牛人在解决难题的时才是我成长最快的时候。</strong></p><h2 id="Work-Smart"><a href="#Work-Smart" class="headerlink" title="Work Smart"></a><strong>Work Smart</strong></h2><p>2015年因为父亲病危要动手术，所以我不能工作在家照顾父亲。于是我就成为了一个自由职业者，帮很多公司解决一些技术问题，好多都是高并发和系统稳定性的问题，有一些是分布式架构的运维的问题，还有一些是工程管理和企业文化问题……有一些小公司的单体架构在业务上一推广就宕机了，于是把我叫过去，我在生产线上直接re-arch，用一些非常规的手段，1-2天就把性能救过来了…… 还有就是解决一些点状的技术问题，还帮用户做一些design/code review……，有70%工作是真正的按劳取酬，也就是先把问题解决了再谈要收多少钱，<strong>那段时间我出卖的不是我的劳动力，而是我的技能，所以，反而比打工挣得多多了，而且还比较轻闲……</strong></p><p>有时候，我还调侃到，你在大公司里一天写上万行代码，拼命地加班，你信不信，我只用写几百行代码就挣得比你多？<strong>同样是一个简单的 for-loop 语句，有人写的就值1万元一行，而你写的则一文不值。关键不在于谁写的代码多，关键在于我们解决了什么样的问题。</strong>你千万不要以为只要付你足够的钱，你就可以996，让你干什么都可以，然而当你自己把自己当成劳动力的时候，你也就只是一个像牲口一样的行事了！</p><p><strong>这就好像算法一样，你那个O(n^2)的递归穷举算法，再怎么样也干不过我的O(n)的动态规划的算法。</strong></p><p>现在我拿了投资在创业，一开始帮助各大企业建高并发高可用云化架构的公司，现在还给企业提供金融和营销能力，我跟客户谈业务的时候，基本不是因为我有多加班多努力地做方案，而是我能一针见血地指出用户的问题，帮用户解决问题。我在很多地方都见到阿里、蚂蚁、华为、HP……，一个小创业公司跟他们竞争真的很难，但我知道，要能竞争过这些大公司，这根本就不是能够通过加班996或是拼命努力就能搞定的，我必需要使用更好的方式，所以，除了更好地站在用户的立场，能够给用户制定更符合用户的技术方案之外，我必需做到我的技术方案不比这些大公司的差，而这一点，完全不是加班、努力或是勤奋能出来的，这是需要靠自己的经验、学习能力、归纳思考、和与更多牛人交流才出的来的……当我给某银行CIO介绍完我的分布式系统的方案后，CIO给我微微鞠躬说：“过去一两年，我听过几乎所有国内外产商跟我讲的分布式的方案，你的是我听过的最好的方案！谢谢你！”，当我给某省电信行业公司讲了一下DevOps的方案后，老总对我说：“你们真的是做事的人！”，当用户来问我：“你们的API网关是怎么写的？为什么运行的这么稳定？”……这些话都是让我很心里很暖的话……<strong>当然，我也有被骂的时候，也有失败的时候，但基本上来说，我无法通过努力工作改善我思维的不足……</strong></p><p><strong>我们学计算机当程序员最大的福气不是可以到大公司里加班和996，而是我们生活在了第三次工业革命的信息化时代，这才是最大的福气，所以，我们应该努力地提升自己，而不是把自己当劳动力一样的卖了！在这样的一个时代，你要做的不是通过加班和拼命来跪着挣钱，而是通过技能来躺着挣钱……</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="转载" scheme="https://itogetheralone.github.io/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="家中" scheme="https://itogetheralone.github.io/tags/%E5%AE%B6%E4%B8%AD/"/>
    
      <category term="思想" scheme="https://itogetheralone.github.io/tags/%E6%80%9D%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>我们没必要相互理解</title>
    <link href="https://itogetheralone.github.io/2020/03/24/%E6%88%91%E4%BB%AC%E6%B2%A1%E5%BF%85%E8%A6%81%E7%9B%B8%E4%BA%92%E7%90%86%E8%A7%A3/"/>
    <id>https://itogetheralone.github.io/2020/03/24/%E6%88%91%E4%BB%AC%E6%B2%A1%E5%BF%85%E8%A6%81%E7%9B%B8%E4%BA%92%E7%90%86%E8%A7%A3/</id>
    <published>2020-03-24T14:47:14.000Z</published>
    <updated>2020-03-24T14:53:38.547Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="我们没必要相互理解"><a href="#我们没必要相互理解" class="headerlink" title="我们没必要相互理解"></a>我们没必要相互理解</h2><p><strong>转载自微信公众号【半佛仙人】，ID：banfoSB</strong></p><p>有时候我觉得在网上和人争论到面红耳赤是一件比较魔怔的事情。</p><p>因为大家最大的分歧其实不是对错，实际上大家对于对错的认知是相同的。</p><p>真正的分歧点在于，对于事件本身的定义以及对于事件阈值的容忍度。</p><p>举个例子，可能不太恰当。</p><p>约炮到底是对还是错？</p><p>你说对也可以，错也可以。</p><p>实际上这个问题可以被拆分成很多的问题。</p><p>要如何定义约炮？双方都是单身，来一发有没有错？</p><p>自身单身，有需求，怎么办？难道去嫖么？</p><p>约炮的过程中不知道对方是否单身怎么办？</p><p>大家你情我愿算不算不道德？</p><p>不以破坏对方家庭为目的的约炮算不算素炮？</p><p>如果能把这些定义全都厘清，并且达成一致，其实也没啥好吵的了。</p><p>类似的问题可以提出非常多，那么问题来了，谁掌握了这些问题的解释权呢？<br>没人有解释权，只有当事人有解释权。</p><p>但是当事人不会讲话。</p><p>实际上争论双方往往会依据自身的想法出发来把自己的概念强加于他人。</p><p>这本质上，其实就是大家的三观不和。</p><p>而三观的形成，受制于成长环境，受教育环境，工作环境，经济条件，人际关系，屁股位置等等一切变量都不同，所以有不同的观点简直是再正常不过的事情，没必要说服对方。</p><p>我的人生信条，在他的眼里完全可以是一堆狗屁；</p><p>他的人生理想，在我眼里完全是愚不可及。</p><p>但我们都是合理的，因为我们都是基于自身的三观对事情做出了解释。</p><p>所以大家没必要相互理解，因为客观上就是理解不了啊。</p><p>我真的理解不了很多人追星追到脑子瓦特了，但是很多人也理解不了我这种有钱不买奢侈品是不是沙雕。</p><p>从他的角度出发，他永远是对的，因为他看到的确实如此；</p><p>从我的角度，我永远是对的。</p><p>而且说实在的，我也永远不可能真的站在他的角度，我也不会为他的后果负责，所以有啥好争的。</p><p>有这个功夫我去写广告不好么。</p><p>大家各自表述观点，丢出来，就好了，别乱扣帽子。</p><p>能做到互相体谅（不直接人身攻击就算相互体谅了），但各持各的观点，各过各的生活，就更好了。</p><p>所以有时候我也特别认可大佬的一句话。</p><p>求同存异。</p><p>这真的是一种美德。</p><p><strong>转载自微信公众号【半佛仙人】，ID：banfoSB</strong><br><strong>侵删</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="转载" scheme="https://itogetheralone.github.io/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="家中" scheme="https://itogetheralone.github.io/tags/%E5%AE%B6%E4%B8%AD/"/>
    
      <category term="思想" scheme="https://itogetheralone.github.io/tags/%E6%80%9D%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>记Markdown语言的学习与总结</title>
    <link href="https://itogetheralone.github.io/2020/03/22/markdown/"/>
    <id>https://itogetheralone.github.io/2020/03/22/markdown/</id>
    <published>2020-03-22T10:47:46.000Z</published>
    <updated>2020-09-29T12:14:22.451Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Markdown语言简介"><a href="#Markdown语言简介" class="headerlink" title="Markdown语言简介"></a>Markdown语言简介</h2><p>Markdown是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。<br>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。<br>Markdown 编写的文档可以导出 HTML、Word、图像、PDF、Epub等多种格式的文档。<br>Markdown 编写的文档后缀为 .md, .markdown。<br>Markdown 能被使用来撰写电子书，如：Gitbook。<br>当前许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息。例如：GitHub、简书、reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge等。</p><hr><h2 id="标题的学习"><a href="#标题的学习" class="headerlink" title="标题的学习"></a>标题的学习</h2><h3 id="以下为代码"><a href="#以下为代码" class="headerlink" title="以下为代码"></a>以下为代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">我展示的是一级标题</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">我展示的是二级标题</span><br><span class="line">-----------------</span><br></pre></td></tr></table></figure><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><blockquote><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6></blockquote><blockquote><h1 id="我展示的是一级标题"><a href="#我展示的是一级标题" class="headerlink" title="我展示的是一级标题"></a>我展示的是一级标题</h1><h2 id="我展示的是二级标题"><a href="#我展示的是二级标题" class="headerlink" title="我展示的是二级标题"></a>我展示的是二级标题</h2></blockquote><h3 id="PS-要注意-号后面要加空格【捂脸】，我傻了半天。"><a href="#PS-要注意-号后面要加空格【捂脸】，我傻了半天。" class="headerlink" title="PS:要注意#号后面要加空格【捂脸】，我傻了半天。"></a><strong>PS:要注意<u>#号后面要加空格</u>【捂脸】</strong>，<del>我傻了半天。</del></h3><hr><h2 id="Markdown-段落"><a href="#Markdown-段落" class="headerlink" title="Markdown 段落"></a>Markdown 段落</h2><p>Markdown 段落没有特殊的格式，直接编写文字就好。<br><strong>段落的换行是使用两个以上空格加上回车。</strong><br><strong>当然也可以在段落后面使用一个空行来表示重新开始一个段落。</strong></p><hr><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">*斜体文本*</span><br><span class="line">_斜体文本_</span><br><span class="line">**粗体文本**</span><br><span class="line">__粗体文本__</span><br><span class="line">***粗斜体文本***</span><br><span class="line">___粗斜体文本___</span><br></pre></td></tr></table></figure><h3 id="以下为结果"><a href="#以下为结果" class="headerlink" title="以下为结果"></a>以下为结果</h3><blockquote><p><em>斜体文本</em><br><em>斜体文本</em><br><strong>粗体文本</strong><br><strong>粗体文本</strong><br><strong><em>粗斜体文本</em></strong><br><strong><em>粗斜体文本</em></strong></p></blockquote><hr><h2 id="分隔-删除-下划线"><a href="#分隔-删除-下划线" class="headerlink" title="分隔-删除-下划线"></a>分隔-删除-下划线</h2><h3 id="以下为代码-1"><a href="#以下为代码-1" class="headerlink" title="以下为代码"></a>以下为代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">分隔</span><br><span class="line"></span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">* * *</span><br><span class="line"></span><br><span class="line">*****</span><br><span class="line"></span><br><span class="line">- - -</span><br><span class="line"></span><br><span class="line">----------</span><br><span class="line"></span><br><span class="line">删除</span><br><span class="line"></span><br><span class="line">~~我怎么这么好看~~</span><br><span class="line"></span><br><span class="line">下划</span><br><span class="line"></span><br><span class="line">&lt;u&gt;带下划线文本&lt;&#x2F;u&gt;</span><br></pre></td></tr></table></figure><h3 id="以下为结果-1"><a href="#以下为结果-1" class="headerlink" title="以下为结果"></a>以下为结果</h3><blockquote><p>分隔</p><hr><hr><hr><hr><hr><p>删除</p><p><del>我怎么这么好看</del></p><p>下划</p><p><u>带下划线文本</u></p></blockquote><hr><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p>脚注是对文本的补充说明。</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">创建脚注格式类似这样 [^陌尘]。</span><br><span class="line"></span><br><span class="line">[^陌尘]: ~~大佬~~萌新一个。</span><br></pre></td></tr></table></figure><h3 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h3><blockquote><p>创建脚注格式类似这样 <a href="~~大佬~~萌新一个。">^陌尘</a>。</p><p><strong>不知道为啥，总是报无法获取的错误，换成英文也一样</strong><br><strong>哪位大佬知道请联系我的github</strong></p></blockquote><hr><h2 id="Markdown-列表"><a href="#Markdown-列表" class="headerlink" title="Markdown 列表"></a>Markdown 列表</h2><p>Markdown 支持有序列表和无序列表。<br>无序列表使用<strong>星号、加号(+)或是减号(-)</strong>作为列表标记。<br>有序列表使用<strong>数字并加上 . 号</strong>来表示。<br>列表嵌套只需在<strong>子列表中的选项添加四个空格</strong>即可。</p><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">无序列表</span><br><span class="line"></span><br><span class="line">* 第一项</span><br><span class="line">* 第二项</span><br><span class="line">* 第三项</span><br><span class="line"></span><br><span class="line">+ 第一项</span><br><span class="line">+ 第二项</span><br><span class="line">+ 第三项</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- 第一项</span><br><span class="line">- 第二项</span><br><span class="line">- 第三项</span><br><span class="line"></span><br><span class="line">有序列表</span><br><span class="line"></span><br><span class="line">1. 第一项</span><br><span class="line">2. 第二项</span><br><span class="line">3. 第三项</span><br><span class="line"></span><br><span class="line">列表嵌套</span><br><span class="line"></span><br><span class="line">1. 第一项：</span><br><span class="line">    - 第一项嵌套的第一个元素</span><br><span class="line">    - 第一项嵌套的第二个元素</span><br><span class="line">2. 第二项：</span><br><span class="line">    - 第二项嵌套的第一个元素</span><br><span class="line">    - 第二项嵌套的第二个元素</span><br></pre></td></tr></table></figure><h3 id="结果-2"><a href="#结果-2" class="headerlink" title="结果"></a>结果</h3><blockquote><p>无序列表</p><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></blockquote><blockquote><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><p>有序列表</p><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol><p>列表嵌套</p><ol><li><p>第一项：</p><ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素</li></ul></li><li><p>第二项：</p><ul><li><p>第二项嵌套的第一个元素</p></li><li><p>第二项嵌套的第二个元素</p></li></ul></li></ol></blockquote><h3 id="PS-Sublime-Text3编辑器-Ctrl-Shift-L快捷键同时对鼠标选中多行一起编辑。"><a href="#PS-Sublime-Text3编辑器-Ctrl-Shift-L快捷键同时对鼠标选中多行一起编辑。" class="headerlink" title="PS: Sublime Text3编辑器 Ctrl+Shift+L快捷键同时对鼠标选中多行一起编辑。"></a>PS: Sublime Text3编辑器 <strong>Ctrl+Shift+L</strong>快捷键同时对鼠标选中多行一起编辑。</h3><hr><h2 id="Markdown-区块"><a href="#Markdown-区块" class="headerlink" title="Markdown 区块"></a>Markdown 区块</h2><p>Markdown 区块引用是在段落<strong>开头使用 &gt; 符号 ，然后后面紧跟一个空格</strong>符号。<br>另外区块是可以嵌套的，<strong>一个 &gt; 符号是最外层，两个 &gt; 符号是第一层</strong>嵌套。<br>如果要在列表项目内放进区块，那么就需要<strong>在 &gt; 前添加四个空格</strong>的缩进。</p><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&gt; 区块引用</span><br><span class="line"></span><br><span class="line">嵌套</span><br><span class="line"></span><br><span class="line">&gt; 最外层</span><br><span class="line">&gt; &gt; 第一层嵌套</span><br><span class="line">&gt; &gt; &gt; 第二层嵌套</span><br><span class="line"></span><br><span class="line">区块中使用列表</span><br><span class="line"></span><br><span class="line">&gt; 区块中使用列表</span><br><span class="line">&gt; 1. 第一项</span><br><span class="line">&gt; 2. 第二项</span><br><span class="line">&gt; + 第一项</span><br><span class="line">&gt; + 第二项</span><br><span class="line">&gt; + 第三项</span><br><span class="line"></span><br><span class="line">列表中使用区块</span><br><span class="line"></span><br><span class="line">* 第一项</span><br><span class="line">    &gt; TogetherAlone</span><br><span class="line">    &gt; 陌尘</span><br><span class="line">* 第二项</span><br></pre></td></tr></table></figure><h3 id="结果-3"><a href="#结果-3" class="headerlink" title="结果"></a>结果</h3><blockquote><p>区块引用</p><p>嵌套</p><p>最外层</p><blockquote><p>第一层嵌套</p><blockquote><p>第二层嵌套</p></blockquote></blockquote><p>区块中使用列表</p><p>区块中使用列表</p><ol><li>第一项</li><li>第二项</li></ol><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><p>列表中使用区块</p><ul><li>第一项<blockquote><p>TogetherAlone<br>陌尘</p></blockquote></li><li>第二项</li></ul></blockquote><hr><h2 id="Markdown-代码块"><a href="#Markdown-代码块" class="headerlink" title="Markdown 代码块"></a>Markdown 代码块</h2><p>如果是段落上的一个函数或片段的代码可以用<strong>反引号</strong>把它包起来。<br>代码区块使用 4 个空格或者一个制表符（Tab 键）。<br>你也可以用 三反引号 包裹一段代码，并指定一种语言（也可以不指定）。</p><h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#96;printf()&#96; 函数</span><br></pre></td></tr></table></figure><h3 id="结果-4"><a href="#结果-4" class="headerlink" title="结果"></a>结果</h3><blockquote><p><code>printf()</code> 函数</p></blockquote><h3 id="PS-三反引号我懒得弄，用tab键的我总是不成功。"><a href="#PS-三反引号我懒得弄，用tab键的我总是不成功。" class="headerlink" title="PS:三反引号我懒得弄，用tab键的我总是不成功。"></a>PS:三反引号我懒得弄，用tab键的我总是不成功。</h3><hr><h2 id="Markdown-链接"><a href="#Markdown-链接" class="headerlink" title="Markdown 链接"></a>Markdown 链接</h2><h3 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">这是一个链接 [BiliBili](https:&#x2F;&#x2F;www.bilibili.com&#x2F;)</span><br><span class="line"></span><br><span class="line">&lt;https:&#x2F;&#x2F;www.bilibili.com&gt;</span><br><span class="line"></span><br><span class="line">这个链接用 1 作为网址变量 [Google][1]</span><br><span class="line">这个链接用 BiliBili 作为网址变量 [BiliBili][BiliBili]</span><br><span class="line">然后在文档的结尾为变量赋值（网址）</span><br><span class="line"></span><br><span class="line">  [1]: http:&#x2F;&#x2F;www.google.com&#x2F;</span><br><span class="line">  [BiliBili]: https:&#x2F;&#x2F;www.bilibili.com&#x2F;</span><br></pre></td></tr></table></figure><h3 id="结果-5"><a href="#结果-5" class="headerlink" title="结果"></a>结果</h3><blockquote><p>这是一个链接 <a href="https://www.bilibili.com/" target="_blank" rel="noopener">BiliBili</a></p><p><a href="https://www.bilibili.com" target="_blank" rel="noopener">https://www.bilibili.com</a></p><p><a href="http://www.google.com/" target="_blank" rel="noopener">Google</a><br><a href="https://www.bilibili.com/" target="_blank" rel="noopener">BiliBili</a></p></blockquote><hr><h2 id="Markdown-图片"><a href="#Markdown-图片" class="headerlink" title="Markdown 图片"></a>Markdown 图片</h2><p>开头一个<strong>感叹号 !</strong><br>接着一个<strong>方括号，里面放上图片的替代文字</strong><br>接着一个<strong>普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性</strong>的文字。</p><h3 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">![风景](https:&#x2F;&#x2F;iTogetherAlone.github.io&#x2F;img&#x2F;head.jpg)</span><br><span class="line"></span><br><span class="line">![风景](https:&#x2F;&#x2F;iTogetherAlone.github.io&#x2F;img&#x2F;head.jpg &quot;风景&quot;)</span><br><span class="line"></span><br><span class="line">这个链接用 1 作为网址变量 [风景][1].</span><br><span class="line">然后在文档的结尾为变量赋值（网址）</span><br><span class="line"></span><br><span class="line">[1]: https:&#x2F;&#x2F;iTogetherAlone.github.io&#x2F;img&#x2F;head.jpg</span><br><span class="line"></span><br><span class="line">&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;iTogetherAlone.github.io&#x2F;img&#x2F;head.jpg&quot; width&#x3D;&quot;50%&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="结果-6"><a href="#结果-6" class="headerlink" title="结果"></a>结果</h3><blockquote><p><img src="https://iTogetherAlone.github.io/img/head.jpg" alt="风景"></p><p><img src="https://iTogetherAlone.github.io/img/head.jpg" alt="风景" title="风景"></p><p>这个链接用 1 作为网址变量 <a href="http://www.google.com/" target="_blank" rel="noopener">风景</a>.<br>然后在文档的结尾为变量赋值（网址）</p><img src="https://iTogetherAlone.github.io/img/head.jpg" width="50%"> </blockquote><hr><h2 id="Markdown-表格"><a href="#Markdown-表格" class="headerlink" title="Markdown 表格"></a>Markdown 表格</h2><h3 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :----- | -----: | :----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><h3 id="结果-7"><a href="#结果-7" class="headerlink" title="结果"></a>结果</h3><blockquote><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table></blockquote><hr><h2 id="Markdown-高级技巧"><a href="#Markdown-高级技巧" class="headerlink" title="Markdown 高级技巧"></a>Markdown 高级技巧</h2><h3 id="支持的-HTML-元素"><a href="#支持的-HTML-元素" class="headerlink" title="支持的 HTML 元素"></a>支持的 HTML 元素</h3><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。<br>目前支持的 HTML 元素有：<kbd> <b> <i> <em> <sup> <sub> <br>等 </p><h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符<br>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><blockquote><p> 反斜线<br> 反引号<br> 星号<br> 下划线<br> 花括号<br> 方括号<br> 小括号<br> 井字号<br> 加号<br> 减号<br> 英文句点<br> 感叹号</p></blockquote><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。</p><h1 id="完结了，撒花✿✿ヽ-°▽°-ノ✿"><a href="#完结了，撒花✿✿ヽ-°▽°-ノ✿" class="headerlink" title="完结了，撒花✿✿ヽ(°▽°)ノ✿"></a>完结了，撒花✿✿ヽ(°▽°)ノ✿</h1><h3 id="这个语言简洁好用也好看还好学"><a href="#这个语言简洁好用也好看还好学" class="headerlink" title="这个语言简洁好用也好看还好学"></a>这个语言简洁好用也好看还好学</h3><h3 id="过瘾"><a href="#过瘾" class="headerlink" title="过瘾"></a>过瘾</h3><h6 id="学自菜鸟教程"><a href="#学自菜鸟教程" class="headerlink" title="学自菜鸟教程"></a>学自菜鸟教程</h6>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="语言学习" scheme="https://itogetheralone.github.io/categories/%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="技术" scheme="https://itogetheralone.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="家中" scheme="https://itogetheralone.github.io/tags/%E5%AE%B6%E4%B8%AD/"/>
    
  </entry>
  
</feed>
