[{"title":"“努力就会成功”","url":"/2020/03/24/努力就会成功/","content":"\n## “努力就会成功”\n\n**转载自陈皓-酷壳CoolShell**\n\n那一年，我加入了某知名公司的某知名部门，在办公室中，我看到了到处都挂着——“努力就会成功”的条幅，这个部门中大多数员工的邮件签名都会有“努力就会成功”，我感到一种热血沸腾的气氛，这是我在多年工作来都没有感受到的，当时挺高兴地能和这样一群人工作，也没多想。直到有一天，我看到这些高级的软件工程师们把自己关在又挤又吵的会议室中，拼命地加班，真是拼命，周一到周日，每天早上10点到凌晨3点甚至凌晨5点，连国庆节都来上班，就在这样的环境和状态下，连续干了三个多月……上线前，QA找到了1000多个bug（你没看错，就是一千多个），最后这个项目用了1年多的时间来返工，本来一个6-8个月的项目，团队被打了鸡血想在3个月内完成，最终却花了近两年的时间来返工……（要知道，我以前在外国公司工作，外国老板看到团队在长时间加班会感到焦虑的，因为加班通常代表着有不好的事情正在发生……）\n\n所以对此，我是有点看不懂的，看不懂的是，为什么这么一群聪明的人，放着明亮宽敞的办公桌不用，硬要挤在一个又窄又小又吵又热的小空间里工作，而且要这么透支地写那么重要的很关键的系统级的代码……这就好像，一架在一个小作坊里被人加班加点赶工出来的飞机，谁敢坐啊？！老实说，这群工程师真是很优秀的工程师，他们完全是可以做得更好的……但是却做出了如此蹩脚和糟糕的系统……他们说，这样坐在一起可以做到快速沟通，然而，我觉得这恰恰是一种没有章法的表现。\n\n也是在这家公司，在这个项目烂尾一年前，公司感到了危机，CEO号召全体996，举全公司之力从董事长到下面基层员工对抗外部所谓的威胁，有的部门为了表现，甚至997，然而，在一年后，做出了一个烂得不能再烂的软件，最终以失败告终，很多人包括CEO也因此下课……\n\n\n这是最让我看不懂的一个事了，为什么这么如此成功的公司的高级管理层会做出这样的事情，而且还制定这样的政策……把这么优秀的员工以及公司大把把数以亿计的钞票投入到这种错误的路线上来，而且还拼命地加班…… 他们脑子里在想什么呢？难道他们真的以为，有足够多的钱，足够多的人，然后拼命加班，就能打败对手吗？……\n\n## **你喜欢这句话吗？**\n\n“努力就会成功”，“加班就会有成就”，“勤劳就会致富”……是这样吗？仔细思考一些，这些话存在严重的逻辑问题，我们在高中的时候学过“充分条件”，“必要条件”和“充要条件”！**“努力就会成功”这句话，把“努力”说成了“成功”的充要条件，这不就是错的吗？努力只是成功的必要条件之一。**你在错误的方向或是格局很小的方向上努力，能有用么？你努力地要饭，你努力地当搬运工，你努力地打骚扰电话销卖保险…… 在错误和小格局的方向上努力，你还觉得努力还有用吗？\n\n但是很多人是很喜欢“努力就会成功”这句话，这类人也很喜欢看很多小人物通过自己的努力变成成功人士的励志的故事，为什么这种故事会被很多人喜欢甚至感动。因为这很符合大众的心理诉求，这种诉求其实就是一种只要使力只要拼命了就可以成功的心理诉求，**因为这类人基本上都是能力有限，不知道怎么提升自己的人，当他们看到只要拼命使力就可以成功的观点时，他们就会有共鸣，就会感到，不用学习那些晦涩难懂高级的知识，不用掌握和练习哪些高级技能，自己只需要在低级的事情上拼命和努力，加更多的班和干更多活，自己就会像电影中的那些小人物一样，总有一天会成功的……\n“努力就会成功，勤劳就会致富”，不但符合那些低级管理者的利益诉求，同样符合那些能力不足不愿意学习和成长的人的诉求。因为，他们混淆了行动与进展，忙碌与多产，他们以为能靠蛮力可以弥补思维上的惰性，靠拼命可以弥补能力上的不足……**\n\n喜欢或认同这句话的人基本是能力上有问题的人，这类适合做劳动密集型的事。不信你可以试试看，当一件事的难度超过一定程度的时候，那些聪明的人会找到更省力的方法，而能力上有问题的，还是在那使蛮力。\n\n## **我成长的过程**\n\n回想我的过去，我在2001年那年被外包到了某银行做开发，标准的9/10/6，封闭开发，就是用C语言在AIX系统里堆一些银行的交易逻辑，老实说，这个过程并没有让我学到什么东西，也没有什么成长，我每天想的就是我要离开这个地方，所以，我在晚上10点以后开始看书学习到11点半，并使用工作环境动手实践书上的代码，一年后，我精读了《TCP/IP详解》《Windows核心编程》《Java编程思想》等书。然后，我找到一份外企业的工作，月薪一下翻了三倍。\n\n在外企不加班，但是当时的外企压力也很大，对代码的质量要求的也很高，来的第二个月，就因为代码写的太差，差点被开掉，所以，为了能够达到更高的标准，我自然也是很努力的，在周末甚至黄金周节假日我哪里都不去，我就去公司，但我不是在公司上班，因为我没有自己的电脑，所以，我只能蹭公司的电脑，这导致办公楼的管理人员经常打电话给我让我帮他在周末的时候管理物业…… **在这家公司是我成长最快的时候，然而，并不是因为我的努力，而是因为有很多比我牛逼的人在Code Review上给我大量的帮助，在项目上帮助我，我的努力学习虽然也有作用，但更多的是高手对我的帮助。**\n\n**再回想一下我以前在职场上的很多关键点，不是因为我加班了，而是因为在某些关键问题上，我跳出来解决了其它人都解决不了的问题，**我解决了一个网络通信莫名其妙的断掉的问题，我把性能优化了很多倍，我解决了一个不能重现的一个困扰团队3个星期的问题（其实就是大家没有认真读文档），我在入职一个公司的第一天里就为这个公司解决了一个历史遗留问题……在Platform，我每周解决了bug数是全公司的其它人的总和还要多（从不加班），在路透，我带团队优化的系统的性能是全球所有研发中心最高的，在亚马逊，两周打通美国和德国的订单和商品列表系统……我也有失败的时候，**而我失败的时候，总是因为我搞不定事，即便是加班拼命努力也无济于事！**是的，我的职业生涯的成长，最根本的不是你有多努力，有多勤奋，而是你能搞定很多人搞不定的事！\n\n你不信你可以看看你们公司那些不用加班，就算什么也不干，公司也要花钱养的技术人员，他们的成功一定不是努力和加班加出来的，**你会发现这些人拼的不是谁干的多，而是谁解决的问题更有难。**\n\n**我加班996的时候，从来都不是我成长最快的时候，而我和一群牛人在解决难题的时才是我成长最快的时候。**\n\n## **Work Smart**\n\n2015年因为父亲病危要动手术，所以我不能工作在家照顾父亲。于是我就成为了一个自由职业者，帮很多公司解决一些技术问题，好多都是高并发和系统稳定性的问题，有一些是分布式架构的运维的问题，还有一些是工程管理和企业文化问题……有一些小公司的单体架构在业务上一推广就宕机了，于是把我叫过去，我在生产线上直接re-arch，用一些非常规的手段，1-2天就把性能救过来了…… 还有就是解决一些点状的技术问题，还帮用户做一些design/code review……，有70%工作是真正的按劳取酬，也就是先把问题解决了再谈要收多少钱，**那段时间我出卖的不是我的劳动力，而是我的技能，所以，反而比打工挣得多多了，而且还比较轻闲……**\n\n有时候，我还调侃到，你在大公司里一天写上万行代码，拼命地加班，你信不信，我只用写几百行代码就挣得比你多？**同样是一个简单的 for-loop 语句，有人写的就值1万元一行，而你写的则一文不值。关键不在于谁写的代码多，关键在于我们解决了什么样的问题。**你千万不要以为只要付你足够的钱，你就可以996，让你干什么都可以，然而当你自己把自己当成劳动力的时候，你也就只是一个像牲口一样的行事了！\n\n\n**这就好像算法一样，你那个O(n^2)的递归穷举算法，再怎么样也干不过我的O(n)的动态规划的算法。**\n\n现在我拿了投资在创业，一开始帮助各大企业建高并发高可用云化架构的公司，现在还给企业提供金融和营销能力，我跟客户谈业务的时候，基本不是因为我有多加班多努力地做方案，而是我能一针见血地指出用户的问题，帮用户解决问题。我在很多地方都见到阿里、蚂蚁、华为、HP……，一个小创业公司跟他们竞争真的很难，但我知道，要能竞争过这些大公司，这根本就不是能够通过加班996或是拼命努力就能搞定的，我必需要使用更好的方式，所以，除了更好地站在用户的立场，能够给用户制定更符合用户的技术方案之外，我必需做到我的技术方案不比这些大公司的差，而这一点，完全不是加班、努力或是勤奋能出来的，这是需要靠自己的经验、学习能力、归纳思考、和与更多牛人交流才出的来的……当我给某银行CIO介绍完我的分布式系统的方案后，CIO给我微微鞠躬说：“过去一两年，我听过几乎所有国内外产商跟我讲的分布式的方案，你的是我听过的最好的方案！谢谢你！”，当我给某省电信行业公司讲了一下DevOps的方案后，老总对我说：“你们真的是做事的人！”，当用户来问我：“你们的API网关是怎么写的？为什么运行的这么稳定？”……这些话都是让我很心里很暖的话……**当然，我也有被骂的时候，也有失败的时候，但基本上来说，我无法通过努力工作改善我思维的不足……**\n\n**我们学计算机当程序员最大的福气不是可以到大公司里加班和996，而是我们生活在了第三次工业革命的信息化时代，这才是最大的福气，所以，我们应该努力地提升自己，而不是把自己当劳动力一样的卖了！在这样的一个时代，你要做的不是通过加班和拼命来跪着挣钱，而是通过技能来躺着挣钱……**\n","tags":["家中","思想"],"categories":["转载"]},{"title":"我们没必要相互理解","url":"/2020/03/24/我们没必要相互理解/","content":"\n## 我们没必要相互理解\n\n**转载自微信公众号【半佛仙人】，ID：banfoSB**\n\n有时候我觉得在网上和人争论到面红耳赤是一件比较魔怔的事情。\n\n因为大家最大的分歧其实不是对错，实际上大家对于对错的认知是相同的。\n\n真正的分歧点在于，对于事件本身的定义以及对于事件阈值的容忍度。\n\n举个例子，可能不太恰当。\n\n约炮到底是对还是错？\n\n你说对也可以，错也可以。\n\n实际上这个问题可以被拆分成很多的问题。\n\n要如何定义约炮？双方都是单身，来一发有没有错？\n\n自身单身，有需求，怎么办？难道去嫖么？\n\n约炮的过程中不知道对方是否单身怎么办？\n\n大家你情我愿算不算不道德？\n\n不以破坏对方家庭为目的的约炮算不算素炮？\n\n如果能把这些定义全都厘清，并且达成一致，其实也没啥好吵的了。\n\n类似的问题可以提出非常多，那么问题来了，谁掌握了这些问题的解释权呢？\n没人有解释权，只有当事人有解释权。\n\n但是当事人不会讲话。\n\n实际上争论双方往往会依据自身的想法出发来把自己的概念强加于他人。\n\n这本质上，其实就是大家的三观不和。\n\n而三观的形成，受制于成长环境，受教育环境，工作环境，经济条件，人际关系，屁股位置等等一切变量都不同，所以有不同的观点简直是再正常不过的事情，没必要说服对方。\n\n我的人生信条，在他的眼里完全可以是一堆狗屁；\n\n他的人生理想，在我眼里完全是愚不可及。\n\n但我们都是合理的，因为我们都是基于自身的三观对事情做出了解释。\n\n所以大家没必要相互理解，因为客观上就是理解不了啊。\n\n我真的理解不了很多人追星追到脑子瓦特了，但是很多人也理解不了我这种有钱不买奢侈品是不是沙雕。\n\n从他的角度出发，他永远是对的，因为他看到的确实如此；\n\n从我的角度，我永远是对的。\n\n而且说实在的，我也永远不可能真的站在他的角度，我也不会为他的后果负责，所以有啥好争的。\n\n有这个功夫我去写广告不好么。\n\n大家各自表述观点，丢出来，就好了，别乱扣帽子。\n\n能做到互相体谅（不直接人身攻击就算相互体谅了），但各持各的观点，各过各的生活，就更好了。\n\n所以有时候我也特别认可大佬的一句话。\n\n求同存异。\n\n这真的是一种美德。\n\n**转载自微信公众号【半佛仙人】，ID：banfoSB**\n**侵删**","tags":["家中","思想"],"categories":["转载"]},{"title":"记Markdown语言的学习与总结","url":"/2020/03/22/markdown/","content":"\n## Markdown语言简介  \n\nMarkdown是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。\nMarkdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。\nMarkdown 编写的文档可以导出 HTML、Word、图像、PDF、Epub等多种格式的文档。\nMarkdown 编写的文档后缀为 .md, .markdown。\nMarkdown 能被使用来撰写电子书，如：Gitbook。\n当前许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息。例如：GitHub、简书、reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge等。\n\n***\n## 标题的学习  \n### 以下为代码  \n```\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n\n或者\n\n我展示的是一级标题\n=================\n我展示的是二级标题\n-----------------\n```\n### 结果  \n\n># 一级标题\n>## 二级标题\n>### 三级标题\n>#### 四级标题\n>##### 五级标题\n>###### 六级标题\n\n>我展示的是一级标题\n>=================\n>我展示的是二级标题\n>-----------------\n\n### **PS:要注意<u>#号后面要加空格</u>【捂脸】**，~~我傻了半天。~~  \n\n***\n## Markdown 段落  \n\nMarkdown 段落没有特殊的格式，直接编写文字就好。\n**段落的换行是使用两个以上空格加上回车。**\n**当然也可以在段落后面使用一个空行来表示重新开始一个段落。**\n\n***\n## 字体  \n### 代码  \n```\n*斜体文本*\n_斜体文本_\n**粗体文本**\n__粗体文本__\n***粗斜体文本***\n___粗斜体文本___\n```\n### 以下为结果  \n\n>*斜体文本*\n>_斜体文本_\n>**粗体文本**\n>__粗体文本__\n>***粗斜体文本***\n>___粗斜体文本___\n\n***\n## 分隔-删除-下划线  \n### 以下为代码  \n\n```\n分隔\n\n***\n\n* * *\n\n*****\n\n- - -\n\n----------\n\n删除\n\n~~我怎么这么好看~~\n\n下划\n\n<u>带下划线文本</u>\n```\n### 以下为结果  \n\n>分隔\n>\n>***\n>\n>* * *\n>\n>*****\n>\n>- - -\n>\n>----------\n>\n>删除\n>\n>~~我怎么这么好看~~\n>\n>下划\n>\n><u>带下划线文本</u>\n\n***\n## 脚注  \n\n脚注是对文本的补充说明。\n\n### 代码  \n\n```\n创建脚注格式类似这样 [^陌尘]。\n\n[^陌尘]: ~~大佬~~萌新一个。\n```\n### 结果  \n\n>创建脚注格式类似这样 [^陌尘]。\n>\n>[^陌尘]: ~~大佬~~萌新一个。\n>**不知道为啥，总是报无法获取的错误，换成英文也一样**\n>**哪位大佬知道请联系我的github**\n\n***\n## Markdown 列表  \n\nMarkdown 支持有序列表和无序列表。\n无序列表使用**星号、加号(+)或是减号(-)**作为列表标记。\n有序列表使用**数字并加上 . 号**来表示。\n列表嵌套只需在**子列表中的选项添加四个空格**即可。\n\n### 代码  \n\n```\n无序列表\n\n* 第一项\n* 第二项\n* 第三项\n\n+ 第一项\n+ 第二项\n+ 第三项\n\n\n- 第一项\n- 第二项\n- 第三项\n\n有序列表\n\n1. 第一项\n2. 第二项\n3. 第三项\n\n列表嵌套\n\n1. 第一项：\n    - 第一项嵌套的第一个元素\n    - 第一项嵌套的第二个元素\n2. 第二项：\n    - 第二项嵌套的第一个元素\n    - 第二项嵌套的第二个元素\n```\n### 结果\n\n>无序列表\n>\n>* 第一项\n>* 第二项\n>* 第三项\n>\n>+ 第一项\n>+ 第二项\n>+ 第三项\n>\n\n>- 第一项\n>- 第二项\n>- 第三项\n>\n>有序列表\n>\n>1. 第一项\n>2. 第二项\n>3. 第三项\n>\n>列表嵌套\n>\n>1. 第一项：\n>    - 第一项嵌套的第一个元素\n>    - 第一项嵌套的第二个元素\n>2. 第二项：\n>    - 第二项嵌套的第一个元素\n>\n>    - 第二项嵌套的第二个元素\n\n### PS: Sublime Text3编辑器 **Ctrl+Shift+L**快捷键同时对鼠标选中多行一起编辑。  \n\n***\n## Markdown 区块  \n\nMarkdown 区块引用是在段落**开头使用 > 符号 ，然后后面紧跟一个空格**符号。\n另外区块是可以嵌套的，**一个 > 符号是最外层，两个 > 符号是第一层**嵌套。\n如果要在列表项目内放进区块，那么就需要**在 > 前添加四个空格**的缩进。\n\n### 代码  \n\n```\n> 区块引用\n\n嵌套\n\n> 最外层\n> > 第一层嵌套\n> > > 第二层嵌套\n\n区块中使用列表\n\n> 区块中使用列表\n> 1. 第一项\n> 2. 第二项\n> + 第一项\n> + 第二项\n> + 第三项\n\n列表中使用区块\n\n* 第一项\n    > TogetherAlone\n    > 陌尘\n* 第二项\n```\n### 结果  \n\n>区块引用\n>\n>嵌套\n>\n> 最外层\n> > 第一层嵌套\n> > > 第二层嵌套\n>\n>区块中使用列表\n>\n> 区块中使用列表\n> 1. 第一项\n> 2. 第二项\n> + 第一项\n> + 第二项\n> + 第三项\n>\n>列表中使用区块\n>\n>* 第一项\n>   > TogetherAlone\n>   > 陌尘\n>* 第二项\n\n***\n## Markdown 代码块  \n\n如果是段落上的一个函数或片段的代码可以用**反引号**把它包起来。\n代码区块使用 4 个空格或者一个制表符（Tab 键）。\n你也可以用 三反引号 包裹一段代码，并指定一种语言（也可以不指定）。\n\n### 代码  \n\n```\n`printf()` 函数\n```\n### 结果  \n\n>`printf()` 函数\n\n### PS:三反引号我懒得弄，用tab键的我总是不成功。  \n\n***\n## Markdown 链接  \n### 代码  \n\n```\n这是一个链接 [BiliBili](https://www.bilibili.com/)\n\n<https://www.bilibili.com>\n\n这个链接用 1 作为网址变量 [Google][1]\n这个链接用 BiliBili 作为网址变量 [BiliBili][BiliBili]\n然后在文档的结尾为变量赋值（网址）\n\n  [1]: http://www.google.com/\n  [BiliBili]: https://www.bilibili.com/\n```\n### 结果  \n\n>这是一个链接 [BiliBili](https://www.bilibili.com/)\n>\n><https://www.bilibili.com>\n>\n>[Google][1]\n>[BiliBili][BiliBili]\n>\n>[1]: http://www.google.com/ \n>[BiliBili]: https://www.bilibili.com/\n\n***\n## Markdown 图片  \n\n开头一个**感叹号 !**\n接着一个**方括号，里面放上图片的替代文字**\n接着一个**普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 'title' 属性**的文字。\n\n### 代码  \n\n```\n![风景](https://iTogetherAlone.github.io/img/head.jpg)\n\n![风景](https://iTogetherAlone.github.io/img/head.jpg \"风景\")\n\n这个链接用 1 作为网址变量 [风景][1].\n然后在文档的结尾为变量赋值（网址）\n\n[1]: https://iTogetherAlone.github.io/img/head.jpg\n\n<img src=\"https://iTogetherAlone.github.io/img/head.jpg\" width=\"50%\">\n```\n### 结果  \n\n>![风景](https://iTogetherAlone.github.io/img/head.jpg)\n>\n>![风景](https://iTogetherAlone.github.io/img/head.jpg \"风景\")\n>\n>这个链接用 1 作为网址变量 [风景][1].\n>然后在文档的结尾为变量赋值（网址）\n>\n>[1]: https://iTogetherAlone.github.io/img/head.jpg>\n>\n><img src=\"https://iTogetherAlone.github.io/img/head.jpg\" width=\"50%\"> \n\n***\n## Markdown 表格  \n### 代码  \n\n```\n| 左对齐 | 右对齐 | 居中对齐 |\n| :-----| ----: | :----: |\n| 单元格 | 单元格 | 单元格 |\n| 单元格 | 单元格 | 单元格 |\n```\n### 结果  \n\n>| 左对齐 | 右对齐 | 居中对齐 |\n>| :-----| ----: | :----: |\n>| 单元格 | 单元格 | 单元格 |\n>| 单元格 | 单元格 | 单元格 |\n\n***\n## Markdown 高级技巧  \n### 支持的 HTML 元素  \n\n不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。\n目前支持的 HTML 元素有：<kbd> <b> <i> <em> <sup> <sub> <br>等 \n\n### 转义  \nMarkdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符\nMarkdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：\n>  反斜线\n>  反引号\n>  星号\n>  下划线\n>  花括号\n>  方括号\n>  小括号\n>  井字号\n>  加号\n>  减号\n>  英文句点\n>  感叹号\n\n### 公式  \n当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。\n\n# 完结了，撒花✿✿ヽ(°▽°)ノ✿\n### 这个语言简洁好用也好看还好学\n### 过瘾\n###### 学自菜鸟教程","tags":["家中","技术"],"categories":["语言学习"]}]